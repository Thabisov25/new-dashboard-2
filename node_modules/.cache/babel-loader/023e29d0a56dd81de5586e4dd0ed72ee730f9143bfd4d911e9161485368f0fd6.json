{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Box, Grid, Paper, Typography, Avatar, IconButton, List, ListItem, ListItemIcon, ListItemText, Badge } from '@mui/material';\nimport NotificationsIcon from '@mui/icons-material/Notifications';\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\nimport EventIcon from '@mui/icons-material/Event';\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport SchoolIcon from '@mui/icons-material/School';\nimport { styled } from '@mui/material/styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useStudent } from '../contexts/StudentContext';\nimport { NotificationContext } from '../contexts/NotificationContext'; // Import Notification Context\nimport { Fade, Slide } from '@mui/material'; // Import Fade and Slide animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _personalDetails;\n  const navigate = useNavigate();\n  const {\n    currentStudent\n  } = useStudent(); // Use context to get the current student\n  const {\n    sendNotification,\n    alerts\n  } = useContext(NotificationContext); // Use NotificationContext to send notifications and access alerts\n  const [student, setStudent] = useState(null);\n  const [error, setError] = useState(null); // Track if there's an error loading student data\n  const [quizHistory, setQuizHistory] = useState([]); // State to store quiz history from localStorage\n\n  useEffect(() => {\n    // Load student data dynamically based on the current student's ID\n    const loadStudentData = async () => {\n      if (currentStudent && currentStudent.id) {\n        try {\n          console.log(`Loading student data for: ${currentStudent.id}`);\n          const data = await import(`../data/students/${currentStudent.id}.js`); // Dynamically import student file\n          setStudent(data.default); // Set the student data\n        } catch (err) {\n          console.error('Error loading student data:', err);\n          setError('Failed to load student data.');\n        }\n      } else {\n        setError('No current student data available.');\n      }\n    };\n    loadStudentData();\n\n    // Load quiz history from localStorage\n    const storedQuizHistory = JSON.parse(localStorage.getItem('quizHistory')) || [];\n    setQuizHistory(storedQuizHistory);\n  }, [currentStudent]);\n  useEffect(() => {\n    if (student) {\n      scheduleSessionReminders(); // Schedule the reminders only if student data is available\n    }\n  }, [student, upcomingSessions]); // Ensure it's called when student data and sessions are updated\n\n  // Helper functions for reminders\n  const getLastSessionOfMonth = () => {\n    return tutoringHistory.reduce((lastSession, session) => {\n      const sessionDate = new Date(session.date);\n      if (sessionDate.getMonth() === currentDate.getMonth() && sessionDate > lastSession) {\n        return sessionDate;\n      }\n      return lastSession;\n    }, new Date(0)); // Initialize with a very early date\n  };\n  const getFirstSessionOfMonth = () => {\n    return tutoringHistory.reduce((firstSession, session) => {\n      const sessionDate = new Date(session.date);\n      if (sessionDate.getMonth() === currentDate.getMonth() && sessionDate < firstSession) {\n        return sessionDate;\n      }\n      return firstSession;\n    }, new Date(9999, 11, 31)); // Initialize with a very late date\n  };\n  const scheduleSessionReminders = () => {\n    // 1. Sessions ending soon (remind 25% before end)\n    upcomingSessions.forEach(session => {\n      const sessionDateTime = new Date(`${session.date}T${session.time || '00:00:00'}`);\n      const sessionDuration = session.duration || 60 * 60 * 1000; // Assume 1-hour session if duration is not provided\n      const sessionEndTime = sessionDateTime.getTime() + sessionDuration;\n\n      // Calculate the point when 25% of the session time is remaining\n      const reminderTime = sessionEndTime - 0.25 * sessionDuration;\n      const now = new Date();\n      const timeUntilReminder = reminderTime - now.getTime();\n      if (timeUntilReminder > 0) {\n        setTimeout(() => {\n          const endTimeText = new Date(sessionEndTime).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          });\n          sendNotification('Session Ending Soon', `Your session for ${session.subject} will end at ${endTimeText}. Only 25% of the session time remains.`);\n        }, timeUntilReminder);\n      }\n    });\n\n    // 2. Notify when the last session of the month happens\n    const lastSessionOfMonth = getLastSessionOfMonth();\n    if (lastSessionOfMonth) {\n      const timeUntilLastSession = new Date(lastSessionOfMonth) - currentDate;\n      if (timeUntilLastSession > 0) {\n        setTimeout(() => {\n          sendNotification('Last Session of the Month', `Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);\n        }, timeUntilLastSession);\n      }\n    }\n\n    // 3. Notify when a new session for the month begins\n    const firstSessionOfMonth = getFirstSessionOfMonth();\n    if (firstSessionOfMonth) {\n      const timeUntilFirstSession = new Date(firstSessionOfMonth) - currentDate;\n      if (timeUntilFirstSession > 0) {\n        setTimeout(() => {\n          sendNotification('New Session Starting', `Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);\n        }, timeUntilFirstSession);\n      }\n    }\n\n    // 4. Remind students to take quizzes\n    setTimeout(() => {\n      sendNotification('Quiz Reminder', 'Donâ€™t forget to take your quizzes to sharpen your mind!');\n    }, 5 * 60 * 1000); // Example: Remind after 5 minutes of page load\n  };\n  const handleQuizzesClick = () => {\n    navigate('/ai-quiz');\n  };\n  const handleStudentProfileClick = () => {\n    navigate('/student-profile');\n  };\n  const handleFlashcardsClick = () => {\n    navigate('/flashcards');\n  };\n  const handlePaymentSessionClick = () => {\n    navigate('/payment-session');\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#ffffff',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If student data is still loading, show a fun and modern loader\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        backgroundColor: '#2c2c2c',\n        color: '#fff'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      ml: {\n        xs: 0,\n        md: '240px'\n      },\n      // Add margin-left on larger screens to make space for the sidebar\n      backgroundColor: '#2c2c2c',\n      color: '#ffffff',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: true,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              sx: {\n                color: '#ffffff'\n              },\n              children: (_personalDetails = personalDetails) !== null && _personalDetails !== void 0 && _personalDetails.name ? `Hello, ${personalDetails.name}!` : 'Hello, Student!'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'relative',\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  badgeContent: alerts.length,\n                  color: \"error\",\n                  sx: {\n                    position: 'absolute',\n                    top: 0,\n                    right: 0\n                  },\n                  children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {\n                    sx: {\n                      color: 'teal'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleStudentProfileClick,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    cursor: 'pointer',\n                    backgroundColor: 'teal',\n                    color: '#fff',\n                    width: 48,\n                    height: 48\n                  },\n                  children: firstLetter\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"up\",\n          in: true,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                color: '#ffffff',\n                '&:hover': {\n                  color: 'teal',\n                  cursor: 'pointer'\n                }\n              },\n              onClick: handlePaymentSessionClick,\n              children: [/*#__PURE__*/_jsxDEV(AccountBalanceWalletIcon, {\n                sx: {\n                  mr: 1,\n                  color: hasActiveSession ? 'teal' : 'darkgray'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), \"Your Balance: \", balance !== 'N/A' ? `R${balance}` : '00']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#ffffff',\n                mt: 1\n              },\n              children: [\"Session Type: \", sessionType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#ffffff'\n              },\n              children: [\"Start Date: \", startDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#ffffff'\n              },\n              children: [\"End Date: \", endDateDisplay]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), !hasActiveSession && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: 'red',\n                mt: 1\n              },\n              children: noActiveSessionMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"left\",\n          in: true,\n          timeout: 800,\n          children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                color: '#ffffff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FlashOnIcon, {\n                sx: {\n                  mr: 1,\n                  color: 'teal'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), \" Active Progress\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                onClick: handleFlashcardsClick,\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(FlashOnIcon, {\n                    sx: {\n                      color: 'teal'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Flashcards: 0% Completed\",\n                  primaryTypographyProps: {\n                    color: '#ffffff'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                onClick: handleQuizzesClick,\n                sx: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(SchoolIcon, {\n                    sx: {\n                      color: 'teal'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `Quizzes: ${totalPercentage}% Total Pass Rate`,\n                  primaryTypographyProps: {\n                    color: '#ffffff'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"right\",\n          in: true,\n          timeout: 800,\n          children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                color: '#ffffff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(EventIcon, {\n                sx: {\n                  mr: 1,\n                  color: 'teal'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), \" Upcoming Sessions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: upcomingSessions.length > 0 ? upcomingSessions.map((session, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${session.subject} - ${session.topic}`,\n                  secondary: `Date: ${new Date(session.date).toLocaleDateString()}`,\n                  primaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.9rem'\n                  },\n                  secondaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.8rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: '#ffffff'\n                },\n                children: \"No upcoming sessions.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"up\",\n          in: true,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                color: '#ffffff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ChatBubbleOutlineIcon, {\n                sx: {\n                  mr: 1,\n                  color: 'teal'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this), \" Messages\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"John Doe\",\n                  secondary: \"Hi, can you help me with my assignment?\",\n                  primaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.9rem'\n                  },\n                  secondaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.8rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: \"Tutor Anna\",\n                  secondary: \"Don't forget your session tomorrow at 10 AM!\",\n                  primaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.9rem'\n                  },\n                  secondaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.8rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"up\",\n          in: true,\n          timeout: 1000,\n          children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                color: '#ffffff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(NotificationsIcon, {\n                sx: {\n                  mr: 1,\n                  color: 'teal'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), \" Alerts & Reminders\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: alerts.length > 0 ? alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: alert.title,\n                  secondary: alert.body,\n                  primaryTypographyProps: {\n                    color: '#ffffff',\n                    fontSize: '0.9rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n                sx: {\n                  color: '#ffffff'\n                },\n                children: \"No alerts at the moment.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled components and Loader definition\n_s(Dashboard, \"g5PAXbNOqAh3eU+9L36EnVqT3H0=\", false, function () {\n  return [useNavigate, useStudent];\n});\n_c = Dashboard;\nconst StyledPaper = styled(Paper)({\n  padding: '20px',\n  marginBottom: '20px',\n  backgroundColor: '#333',\n  color: '#ffffff',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n});\n_c2 = StyledPaper;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"StyledPaper\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Box","Grid","Paper","Typography","Avatar","IconButton","List","ListItem","ListItemIcon","ListItemText","Badge","NotificationsIcon","ChatBubbleOutlineIcon","EventIcon","FlashOnIcon","AccountBalanceWalletIcon","SchoolIcon","styled","useNavigate","useStudent","NotificationContext","Fade","Slide","jsxDEV","_jsxDEV","Dashboard","_s","_personalDetails","navigate","currentStudent","sendNotification","alerts","student","setStudent","error","setError","quizHistory","setQuizHistory","loadStudentData","id","console","log","data","default","err","storedQuizHistory","JSON","parse","localStorage","getItem","scheduleSessionReminders","upcomingSessions","getLastSessionOfMonth","tutoringHistory","reduce","lastSession","session","sessionDate","Date","date","getMonth","currentDate","getFirstSessionOfMonth","firstSession","forEach","sessionDateTime","time","sessionDuration","duration","sessionEndTime","getTime","reminderTime","now","timeUntilReminder","setTimeout","endTimeText","toLocaleTimeString","hour","minute","subject","lastSessionOfMonth","timeUntilLastSession","toLocaleDateString","firstSessionOfMonth","timeUntilFirstSession","handleQuizzesClick","handleStudentProfileClick","handleFlashcardsClick","handlePaymentSessionClick","sx","color","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","height","backgroundColor","component","flexGrow","p","ml","xs","md","minHeight","container","spacing","item","in","timeout","variant","personalDetails","name","position","badgeContent","length","top","right","onClick","cursor","width","firstLetter","direction","StyledPaper","mr","hasActiveSession","balance","mt","sessionType","startDate","endDateDisplay","noActiveSessionMessage","primary","primaryTypographyProps","totalPercentage","map","index","topic","secondary","fontSize","secondaryTypographyProps","alert","title","body","_c","padding","marginBottom","borderRadius","boxShadow","_c2","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Badge,\r\n} from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useStudent } from '../contexts/StudentContext';\r\nimport { NotificationContext } from '../contexts/NotificationContext'; // Import Notification Context\r\nimport { Fade, Slide } from '@mui/material'; // Import Fade and Slide animations\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { currentStudent } = useStudent(); // Use context to get the current student\r\n  const { sendNotification, alerts } = useContext(NotificationContext); // Use NotificationContext to send notifications and access alerts\r\n  const [student, setStudent] = useState(null);\r\n  const [error, setError] = useState(null); // Track if there's an error loading student data\r\n  const [quizHistory, setQuizHistory] = useState([]); // State to store quiz history from localStorage\r\n\r\n  useEffect(() => {\r\n    // Load student data dynamically based on the current student's ID\r\n    const loadStudentData = async () => {\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          console.log(`Loading student data for: ${currentStudent.id}`);\r\n          const data = await import(`../data/students/${currentStudent.id}.js`); // Dynamically import student file\r\n          setStudent(data.default); // Set the student data\r\n        } catch (err) {\r\n          console.error('Error loading student data:', err);\r\n          setError('Failed to load student data.');\r\n        }\r\n      } else {\r\n        setError('No current student data available.');\r\n      }\r\n    };\r\n\r\n    loadStudentData();\r\n\r\n    // Load quiz history from localStorage\r\n    const storedQuizHistory = JSON.parse(localStorage.getItem('quizHistory')) || [];\r\n    setQuizHistory(storedQuizHistory);\r\n\r\n  }, [currentStudent]);\r\n\r\n  useEffect(() => {\r\n    if (student) {\r\n      scheduleSessionReminders(); // Schedule the reminders only if student data is available\r\n    }\r\n  }, [student, upcomingSessions]); // Ensure it's called when student data and sessions are updated\r\n\r\n  // Helper functions for reminders\r\n  const getLastSessionOfMonth = () => {\r\n    return tutoringHistory.reduce((lastSession, session) => {\r\n      const sessionDate = new Date(session.date);\r\n      if (sessionDate.getMonth() === currentDate.getMonth() && sessionDate > lastSession) {\r\n        return sessionDate;\r\n      }\r\n      return lastSession;\r\n    }, new Date(0)); // Initialize with a very early date\r\n  };\r\n\r\n  const getFirstSessionOfMonth = () => {\r\n    return tutoringHistory.reduce((firstSession, session) => {\r\n      const sessionDate = new Date(session.date);\r\n      if (sessionDate.getMonth() === currentDate.getMonth() && sessionDate < firstSession) {\r\n        return sessionDate;\r\n      }\r\n      return firstSession;\r\n    }, new Date(9999, 11, 31)); // Initialize with a very late date\r\n  };\r\n\r\n  const scheduleSessionReminders = () => {\r\n    // 1. Sessions ending soon (remind 25% before end)\r\n    upcomingSessions.forEach((session) => {\r\n      const sessionDateTime = new Date(`${session.date}T${session.time || '00:00:00'}`);\r\n      const sessionDuration = session.duration || 60 * 60 * 1000; // Assume 1-hour session if duration is not provided\r\n      const sessionEndTime = sessionDateTime.getTime() + sessionDuration;\r\n\r\n      // Calculate the point when 25% of the session time is remaining\r\n      const reminderTime = sessionEndTime - 0.25 * sessionDuration;\r\n      const now = new Date();\r\n      const timeUntilReminder = reminderTime - now.getTime();\r\n\r\n      if (timeUntilReminder > 0) {\r\n        setTimeout(() => {\r\n          const endTimeText = new Date(sessionEndTime).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n          sendNotification('Session Ending Soon', `Your session for ${session.subject} will end at ${endTimeText}. Only 25% of the session time remains.`);\r\n        }, timeUntilReminder);\r\n      }\r\n    });\r\n\r\n    // 2. Notify when the last session of the month happens\r\n    const lastSessionOfMonth = getLastSessionOfMonth();\r\n    if (lastSessionOfMonth) {\r\n      const timeUntilLastSession = new Date(lastSessionOfMonth) - currentDate;\r\n      if (timeUntilLastSession > 0) {\r\n        setTimeout(() => {\r\n          sendNotification('Last Session of the Month', `Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);\r\n        }, timeUntilLastSession);\r\n      }\r\n    }\r\n\r\n    // 3. Notify when a new session for the month begins\r\n    const firstSessionOfMonth = getFirstSessionOfMonth();\r\n    if (firstSessionOfMonth) {\r\n      const timeUntilFirstSession = new Date(firstSessionOfMonth) - currentDate;\r\n      if (timeUntilFirstSession > 0) {\r\n        setTimeout(() => {\r\n          sendNotification('New Session Starting', `Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);\r\n        }, timeUntilFirstSession);\r\n      }\r\n    }\r\n\r\n    // 4. Remind students to take quizzes\r\n    setTimeout(() => {\r\n      sendNotification('Quiz Reminder', 'Donâ€™t forget to take your quizzes to sharpen your mind!');\r\n    }, 5 * 60 * 1000); // Example: Remind after 5 minutes of page load\r\n  };\r\n\r\n  const handleQuizzesClick = () => {\r\n    navigate('/ai-quiz');\r\n  };\r\n  const handleStudentProfileClick = () => {\r\n    navigate('/student-profile');\r\n  };\r\n\r\n  const handleFlashcardsClick = () => {\r\n    navigate('/flashcards');\r\n  };\r\n\r\n  const handlePaymentSessionClick = () => {\r\n    navigate('/payment-session');\r\n  };\r\n\r\n  if (error) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  // If student data is still loading, show a fun and modern loader\r\n  if (!student) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        Loading...\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        ml: { xs: 0, md: '240px' }, // Add margin-left on larger screens to make space for the sidebar\r\n        backgroundColor: '#2c2c2c',\r\n        color: '#ffffff',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        {/* Welcome Message */}\r\n        <Grid item xs={12}>\r\n          <Fade in={true} timeout={1000}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Typography variant=\"h5\" sx={{ color: '#ffffff' }}>\r\n                {personalDetails?.name ? `Hello, ${personalDetails.name}!` : 'Hello, Student!'}\r\n              </Typography>\r\n              <Box sx={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n                <IconButton color=\"primary\">\r\n                  <Badge\r\n                    badgeContent={alerts.length}\r\n                    color=\"error\"\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      right: 0,\r\n                    }}\r\n                  >\r\n                    <NotificationsIcon sx={{ color: 'teal' }} />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton onClick={handleStudentProfileClick}>\r\n                  <Avatar sx={{ cursor: 'pointer', backgroundColor: 'teal', color: '#fff', width: 48, height: 48 }}>\r\n                    {firstLetter}\r\n                  </Avatar>\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n          </Fade>\r\n        </Grid>\r\n\r\n        {/* Balance and Session Details */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  color: '#ffffff',\r\n                  '&:hover': { color: 'teal', cursor: 'pointer' },\r\n                }}\r\n                onClick={handlePaymentSessionClick}\r\n              >\r\n                <AccountBalanceWalletIcon sx={{ mr: 1, color: hasActiveSession ? 'teal' : 'darkgray' }} />\r\n                Your Balance: {balance !== 'N/A' ? `R${balance}` : '00'}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff', mt: 1 }}>\r\n                Session Type: {sessionType}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff' }}>\r\n                Start Date: {startDate}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff' }}>\r\n                End Date: {endDateDisplay}\r\n              </Typography>\r\n              {!hasActiveSession && (\r\n                <Typography variant=\"body2\" sx={{ color: 'red', mt: 1 }}>\r\n                  {noActiveSessionMessage}\r\n                </Typography>\r\n              )}\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Active Progress Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Slide direction=\"left\" in={true} timeout={800}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <FlashOnIcon sx={{ mr: 1, color: 'teal' }} /> Active Progress\r\n              </Typography>\r\n              <List>\r\n                <ListItem onClick={handleFlashcardsClick} sx={{ cursor: 'pointer' }}>\r\n                  <ListItemIcon>\r\n                    <FlashOnIcon sx={{ color: 'teal' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Flashcards: 0% Completed\" primaryTypographyProps={{ color: '#ffffff' }} />\r\n                </ListItem>\r\n                <ListItem onClick={handleQuizzesClick} sx={{ cursor: 'pointer' }}>\r\n                  <ListItemIcon>\r\n                    <SchoolIcon sx={{ color: 'teal' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={`Quizzes: ${totalPercentage}% Total Pass Rate`} primaryTypographyProps={{ color: '#ffffff' }} />\r\n                </ListItem>\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Upcoming Sessions Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Slide direction=\"right\" in={true} timeout={800}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <EventIcon sx={{ mr: 1, color: 'teal' }} /> Upcoming Sessions\r\n              </Typography>\r\n              <List>\r\n                {upcomingSessions.length > 0 ? (\r\n                  upcomingSessions.map((session, index) => (\r\n                    <ListItem key={index}>\r\n                      <ListItemText\r\n                        primary={`${session.subject} - ${session.topic}`}\r\n                        secondary={`Date: ${new Date(session.date).toLocaleDateString()}`}\r\n                        primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                        secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                      />\r\n                    </ListItem>\r\n                  ))\r\n                ) : (\r\n                  <Typography sx={{ color: '#ffffff' }}>No upcoming sessions.</Typography>\r\n                )}\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Messaging Section */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <ChatBubbleOutlineIcon sx={{ mr: 1, color: 'teal' }} /> Messages\r\n              </Typography>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"John Doe\"\r\n                    secondary=\"Hi, can you help me with my assignment?\"\r\n                    primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                    secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Tutor Anna\"\r\n                    secondary=\"Don't forget your session tomorrow at 10 AM!\"\r\n                    primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                    secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Additional Section: Alerts or Reminders */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <NotificationsIcon sx={{ mr: 1, color: 'teal' }} /> Alerts & Reminders\r\n              </Typography>\r\n              <List>\r\n                {alerts.length > 0 ? (\r\n                  alerts.map((alert, index) => (\r\n                    <ListItem key={index}>\r\n                      <ListItemText\r\n                        primary={alert.title}\r\n                        secondary={alert.body}\r\n                        primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                      />\r\n                    </ListItem>\r\n                  ))\r\n                ) : (\r\n                  <Typography sx={{ color: '#ffffff' }}>No alerts at the moment.</Typography>\r\n                )}\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Styled components and Loader definition\r\nconst StyledPaper = styled(Paper)({\r\n  padding: '20px',\r\n  marginBottom: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#ffffff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n});\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}