{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';// Create the context\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const NotificationContext=/*#__PURE__*/createContext();export const NotificationProvider=_ref=>{let{children}=_ref;const[pushEnabled,setPushEnabled]=useState(false);// Request notification permission when the app loads\nuseEffect(()=>{if('Notification'in window){if(Notification.permission==='default'){// Request permission if the user hasn't made a decision yet\nNotification.requestPermission().then(permission=>{if(permission==='granted'){setPushEnabled(true);console.log('Notification permission granted.');}else{setPushEnabled(false);console.log('Notification permission denied.');}});}else if(Notification.permission==='granted'){setPushEnabled(true);console.log('Notifications are already enabled.');}else{setPushEnabled(false);console.log('Notifications are blocked. User must change settings to enable.');}}else{console.log('This browser does not support notifications.');}},[]);// Toggle Push Notifications (on/off)\nconst togglePushNotifications=isEnabled=>{setPushEnabled(isEnabled);if(isEnabled){console.log('Push notifications enabled.');// Add logic to subscribe to push notifications here\n}else{console.log('Push notifications disabled.');// Add logic to unsubscribe from push notifications here\n}};// Function to send notifications\nconst sendNotification=(title,body)=>{if(pushEnabled&&'Notification'in window&&Notification.permission==='granted'){try{new Notification(title,{body:body,icon:'/logo.png'// Use your app logo or any relevant icon\n});}catch(error){console.error('Error sending notification:',error);}}else{console.log('Push notifications are not enabled.');}};return/*#__PURE__*/_jsx(NotificationContext.Provider,{value:{pushEnabled,togglePushNotifications,sendNotification},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","NotificationContext","NotificationProvider","_ref","children","pushEnabled","setPushEnabled","window","Notification","permission","requestPermission","then","console","log","togglePushNotifications","isEnabled","sendNotification","title","body","icon","error","Provider","value"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/contexts/NotificationContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create the context\r\nexport const NotificationContext = createContext();\r\n\r\nexport const NotificationProvider = ({ children }) => {\r\n  const [pushEnabled, setPushEnabled] = useState(false);\r\n\r\n  // Request notification permission when the app loads\r\n  useEffect(() => {\r\n    if ('Notification' in window) {\r\n      if (Notification.permission === 'default') {\r\n        // Request permission if the user hasn't made a decision yet\r\n        Notification.requestPermission().then(permission => {\r\n          if (permission === 'granted') {\r\n            setPushEnabled(true);\r\n            console.log('Notification permission granted.');\r\n          } else {\r\n            setPushEnabled(false);\r\n            console.log('Notification permission denied.');\r\n          }\r\n        });\r\n      } else if (Notification.permission === 'granted') {\r\n        setPushEnabled(true);\r\n        console.log('Notifications are already enabled.');\r\n      } else {\r\n        setPushEnabled(false);\r\n        console.log('Notifications are blocked. User must change settings to enable.');\r\n      }\r\n    } else {\r\n      console.log('This browser does not support notifications.');\r\n    }\r\n  }, []);\r\n\r\n  // Toggle Push Notifications (on/off)\r\n  const togglePushNotifications = (isEnabled) => {\r\n    setPushEnabled(isEnabled);\r\n    if (isEnabled) {\r\n      console.log('Push notifications enabled.');\r\n      // Add logic to subscribe to push notifications here\r\n    } else {\r\n      console.log('Push notifications disabled.');\r\n      // Add logic to unsubscribe from push notifications here\r\n    }\r\n  };\r\n\r\n  // Function to send notifications\r\n  const sendNotification = (title, body) => {\r\n    if (pushEnabled && 'Notification' in window && Notification.permission === 'granted') {\r\n      try {\r\n        new Notification(title, {\r\n          body: body,\r\n          icon: '/logo.png',  // Use your app logo or any relevant icon\r\n        });\r\n      } catch (error) {\r\n        console.error('Error sending notification:', error);\r\n      }\r\n    } else {\r\n      console.log('Push notifications are not enabled.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ pushEnabled, togglePushNotifications, sendNotification }}>\r\n      {children}\r\n    </NotificationContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAEjE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,mBAAmB,cAAGL,aAAa,CAAC,CAAC,CAElD,MAAO,MAAM,CAAAM,oBAAoB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAErD;AACAC,SAAS,CAAC,IAAM,CACd,GAAI,cAAc,EAAI,CAAAS,MAAM,CAAE,CAC5B,GAAIC,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACzC;AACAD,YAAY,CAACE,iBAAiB,CAAC,CAAC,CAACC,IAAI,CAACF,UAAU,EAAI,CAClD,GAAIA,UAAU,GAAK,SAAS,CAAE,CAC5BH,cAAc,CAAC,IAAI,CAAC,CACpBM,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CACjD,CAAC,IAAM,CACLP,cAAc,CAAC,KAAK,CAAC,CACrBM,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CACF,CAAC,CAAC,CACJ,CAAC,IAAM,IAAIL,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CAChDH,cAAc,CAAC,IAAI,CAAC,CACpBM,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC,CACnD,CAAC,IAAM,CACLP,cAAc,CAAC,KAAK,CAAC,CACrBM,OAAO,CAACC,GAAG,CAAC,iEAAiE,CAAC,CAChF,CACF,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC,CAC7D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,uBAAuB,CAAIC,SAAS,EAAK,CAC7CT,cAAc,CAACS,SAAS,CAAC,CACzB,GAAIA,SAAS,CAAE,CACbH,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC,CAC1C;AACF,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC,CAC3C;AACF,CACF,CAAC,CAED;AACA,KAAM,CAAAG,gBAAgB,CAAGA,CAACC,KAAK,CAAEC,IAAI,GAAK,CACxC,GAAIb,WAAW,EAAI,cAAc,EAAI,CAAAE,MAAM,EAAIC,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACpF,GAAI,CACF,GAAI,CAAAD,YAAY,CAACS,KAAK,CAAE,CACtBC,IAAI,CAAEA,IAAI,CACVC,IAAI,CAAE,WAAc;AACtB,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,IAAM,CACLR,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC,CACpD,CACF,CAAC,CAED,mBACEb,IAAA,CAACC,mBAAmB,CAACoB,QAAQ,EAACC,KAAK,CAAE,CAAEjB,WAAW,CAAES,uBAAuB,CAAEE,gBAAiB,CAAE,CAAAZ,QAAA,CAC7FA,QAAQ,CACmB,CAAC,CAEnC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}