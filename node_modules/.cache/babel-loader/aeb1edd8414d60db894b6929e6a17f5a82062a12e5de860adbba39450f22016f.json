{"ast":null,"code":"// src/components/FormulaSheets.js\nimport React,{useState}from'react';import{Box,Typography,List,ListItemButton,ListItemText,Collapse,TextField}from'@mui/material';import{styled}from'@mui/material/styles';import{MathJax,MathJaxContext}from'better-react-mathjax';// Import MathJax\nimport formulasData from'../data/formulas.json';// Import the JSON file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const logo=process.env.PUBLIC_URL+'/logo.png';// Reference to the logo\nconst FormulaSheets=()=>{const[selectedFormula,setSelectedFormula]=useState(null);const[searchTerm,setSearchTerm]=useState('');// Toggle the selected formula when clicking on its name\nconst handleFormulaClick=formulaName=>{setSelectedFormula(selectedFormula===formulaName?null:formulaName);};// Filter formulas based on the search term\nconst filteredFormulas=formulasData.formulas.filter(formula=>formula.name.toLowerCase().includes(searchTerm.toLowerCase()));return/*#__PURE__*/_jsx(MathJaxContext,{children:/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1,p:3,minHeight:'100vh',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',gap:3,// Adds spacing between components\nbackgroundColor:'#2c2c2c',// Dark overlay color\nbackgroundImage:`url(${logo})`,// Your logo as background\nbackgroundSize:'cover',backgroundPosition:'center',backgroundBlendMode:'overlay',backgroundAttachment:'fixed',filter:'blur(0px)',// Apply minimal blur to the logo\nposition:'relative'// For content overlay\n},children:[/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(44, 44, 44, 0.8)',// Dark overlay with transparency\nzIndex:-1// Keep behind the content\n}}),/*#__PURE__*/_jsx(Typography,{variant:\"h4\",sx:{color:'teal',fontWeight:'bold',letterSpacing:'2px',fontSize:'1.5rem'// Same as Flashcards\n},gutterBottom:true,children:\"Formula Dictionary\"}),/*#__PURE__*/_jsx(TextField,{label:\"Search for a formula\",variant:\"outlined\",fullWidth:true,sx:{mb:3,maxWidth:600,input:{color:'#fff'},// White text for input\n'& .MuiOutlinedInput-root':{'& fieldset':{borderColor:'teal'// Teal border\n},'&:hover fieldset':{borderColor:'#008080'// Darker teal on hover\n},'&.Mui-focused fieldset':{borderColor:'#008080'// Darker teal when focused\n}},'& label':{color:'#ffffff'},// White label text\n'& .MuiInputBase-root':{backgroundColor:'#1e1e1e',borderRadius:'8px'}},value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsx(StyledList,{children:filteredFormulas.length>0?filteredFormulas.map((formula,index)=>/*#__PURE__*/_jsxs(Box,{sx:{mb:2},children:[/*#__PURE__*/_jsx(ListItemButton,{onClick:()=>handleFormulaClick(formula.name),sx:{color:'#008080',// Teal for formula name\nbackgroundColor:selectedFormula===formula.name?'#444':'#333',// Darker when selected\nborderRadius:1,'&:hover':{backgroundColor:'#444'}// Hover effect\n},children:/*#__PURE__*/_jsx(ListItemText,{primary:formula.name})}),/*#__PURE__*/_jsx(Collapse,{in:selectedFormula===formula.name,timeout:\"auto\",unmountOnExit:true,children:/*#__PURE__*/_jsx(Box,{sx:{p:2,color:'#fff',backgroundColor:'#1e1e1e',borderRadius:1},children:/*#__PURE__*/_jsxs(MathJax,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[\"Formula: \",`\\\\( ${formula.formula} \\\\)`]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{mt:1},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Breakdown:\"}),Object.entries(formula.breakdown).map(_ref=>{let[key,value]=_ref;return/*#__PURE__*/_jsxs(Typography,{children:[/*#__PURE__*/_jsxs(\"strong\",{children:[key,\":\"]}),\" \",value]},key);})]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{mt:1},children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Example Problem:\"}),\" \",formula.example.problem]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Solution:\"}),formula.example.solution.map((step,i)=>/*#__PURE__*/_jsx(Typography,{children:`\\\\( ${step} \\\\)`},i))]})]})})})]},index)):/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{color:'#fff'},children:\"No formulas found\"})})]})});};// Styled List Component for a clean, compact layout\nconst StyledList=styled(List)({width:'100%',maxWidth:600,backgroundColor:'#2c2c2c',// Match dark background theme\nborderRadius:'8px'});export default FormulaSheets;","map":{"version":3,"names":["React","useState","Box","Typography","List","ListItemButton","ListItemText","Collapse","TextField","styled","MathJax","MathJaxContext","formulasData","jsx","_jsx","jsxs","_jsxs","logo","process","env","PUBLIC_URL","FormulaSheets","selectedFormula","setSelectedFormula","searchTerm","setSearchTerm","handleFormulaClick","formulaName","filteredFormulas","formulas","filter","formula","name","toLowerCase","includes","children","sx","flexGrow","p","minHeight","display","flexDirection","alignItems","justifyContent","gap","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundBlendMode","backgroundAttachment","position","top","left","right","bottom","zIndex","variant","color","fontWeight","letterSpacing","fontSize","gutterBottom","label","fullWidth","mb","maxWidth","input","borderColor","borderRadius","value","onChange","e","target","StyledList","length","map","index","onClick","primary","in","timeout","unmountOnExit","mt","Object","entries","breakdown","_ref","key","example","problem","solution","step","i","width"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/components/FormulaSheets.js"],"sourcesContent":["// src/components/FormulaSheets.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, List, ListItemButton, ListItemText, Collapse, TextField } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\r\nimport formulasData from '../data/formulas.json'; // Import the JSON file\r\n\r\nconst logo = process.env.PUBLIC_URL + '/logo.png'; // Reference to the logo\r\n\r\nconst FormulaSheets = () => {\r\n  const [selectedFormula, setSelectedFormula] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Toggle the selected formula when clicking on its name\r\n  const handleFormulaClick = (formulaName) => {\r\n    setSelectedFormula(selectedFormula === formulaName ? null : formulaName);\r\n  };\r\n\r\n  // Filter formulas based on the search term\r\n  const filteredFormulas = formulasData.formulas.filter((formula) =>\r\n    formula.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <MathJaxContext>\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          minHeight: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          gap: 3, // Adds spacing between components\r\n          backgroundColor: '#2c2c2c', // Dark overlay color\r\n          backgroundImage: `url(${logo})`, // Your logo as background\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          backgroundBlendMode: 'overlay',\r\n          backgroundAttachment: 'fixed',\r\n          filter: 'blur(0px)', // Apply minimal blur to the logo\r\n          position: 'relative', // For content overlay\r\n        }}\r\n      >\r\n        {/* Background overlay, similar to Flashcards */}\r\n        <Box\r\n          sx={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: 'rgba(44, 44, 44, 0.8)', // Dark overlay with transparency\r\n            zIndex: -1, // Keep behind the content\r\n          }}\r\n        />\r\n        \r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{\r\n            color: 'teal',\r\n            fontWeight: 'bold',\r\n            letterSpacing: '2px',\r\n            fontSize: '1.5rem', // Same as Flashcards\r\n          }}\r\n          gutterBottom\r\n        >\r\n          Formula Dictionary\r\n        </Typography>\r\n\r\n        {/* Search Bar */}\r\n        <TextField\r\n          label=\"Search for a formula\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          sx={{\r\n            mb: 3,\r\n            maxWidth: 600,\r\n            input: { color: '#fff' }, // White text for input\r\n            '& .MuiOutlinedInput-root': {\r\n              '& fieldset': {\r\n                borderColor: 'teal', // Teal border\r\n              },\r\n              '&:hover fieldset': {\r\n                borderColor: '#008080', // Darker teal on hover\r\n              },\r\n              '&.Mui-focused fieldset': {\r\n                borderColor: '#008080', // Darker teal when focused\r\n              },\r\n            },\r\n            '& label': { color: '#ffffff' }, // White label text\r\n            '& .MuiInputBase-root': {\r\n              backgroundColor: '#1e1e1e',\r\n              borderRadius: '8px',\r\n            },\r\n          }}\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n\r\n        {/* Display Filtered Formula List */}\r\n        <StyledList>\r\n          {filteredFormulas.length > 0 ? (\r\n            filteredFormulas.map((formula, index) => (\r\n              <Box key={index} sx={{ mb: 2 }}>\r\n                <ListItemButton\r\n                  onClick={() => handleFormulaClick(formula.name)}\r\n                  sx={{\r\n                    color: '#008080', // Teal for formula name\r\n                    backgroundColor: selectedFormula === formula.name ? '#444' : '#333', // Darker when selected\r\n                    borderRadius: 1,\r\n                    '&:hover': { backgroundColor: '#444' }, // Hover effect\r\n                  }}\r\n                >\r\n                  <ListItemText primary={formula.name} />\r\n                </ListItemButton>\r\n                <Collapse in={selectedFormula === formula.name} timeout=\"auto\" unmountOnExit>\r\n                  <Box sx={{ p: 2, color: '#fff', backgroundColor: '#1e1e1e', borderRadius: 1 }}>\r\n                    {/* Wrap everything in MathJax */}\r\n                    <MathJax>\r\n                      <Typography variant=\"body1\">\r\n                        Formula: {`\\\\( ${formula.formula} \\\\)`}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                        <strong>Breakdown:</strong>\r\n                        {Object.entries(formula.breakdown).map(([key, value]) => (\r\n                          <Typography key={key}>\r\n                            <strong>{key}:</strong> {value}\r\n                          </Typography>\r\n                        ))}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                        <strong>Example Problem:</strong> {formula.example.problem}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\">\r\n                        <strong>Solution:</strong>\r\n                        {formula.example.solution.map((step, i) => (\r\n                          <Typography key={i}>\r\n                            {`\\\\( ${step} \\\\)`}\r\n                          </Typography>\r\n                        ))}\r\n                      </Typography>\r\n                    </MathJax>\r\n                  </Box>\r\n                </Collapse>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"body1\" sx={{ color: '#fff' }}>No formulas found</Typography>\r\n          )}\r\n        </StyledList>\r\n      </Box>\r\n    </MathJaxContext>\r\n  );\r\n};\r\n\r\n// Styled List Component for a clean, compact layout\r\nconst StyledList = styled(List)({\r\n  width: '100%',\r\n  maxWidth: 600,\r\n  backgroundColor: '#2c2c2c', // Match dark background theme\r\n  borderRadius: '8px',\r\n});\r\n\r\nexport default FormulaSheets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}