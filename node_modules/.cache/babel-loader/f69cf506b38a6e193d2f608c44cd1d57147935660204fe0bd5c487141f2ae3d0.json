{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Box, Grid, Typography, Paper, Switch, FormControlLabel, Divider, Button } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { Notifications } from '@mui/icons-material';\nimport { NotificationContext } from '../contexts/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const {\n    pushEnabled,\n    togglePushNotifications\n  } = useContext(NotificationContext);\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  // Function to check if notifications are blocked\n  const handleTogglePushNotifications = isEnabled => {\n    if (Notification.permission === 'denied') {\n      setIsBlocked(true); // If notifications are blocked, show the blocked message\n    } else {\n      togglePushNotifications(isEnabled); // If not blocked, toggle the notification state\n    }\n  };\n\n  // Function to show a browser-specific guide to enable notifications\n  const showEnableInstructions = () => {\n    alert(\"To enable notifications, please go to your browser settings and allow notifications for this site.\");\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      ml: {\n        xs: 0,\n        md: '240px'\n      },\n      backgroundColor: '#2c2c2c',\n      color: '#fff',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Notifications, {\n              sx: {\n                color: 'teal',\n                marginRight: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              my: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Switch, {\n              color: \"primary\",\n              checked: pushEnabled,\n              onChange: e => handleTogglePushNotifications(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this),\n            label: \"Push Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), isBlocked && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            sx: {\n              color: 'red'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Push notifications are blocked in your browser settings. Please enable them manually.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              sx: {\n                mt: 1,\n                backgroundColor: 'teal',\n                color: '#fff'\n              },\n              onClick: showEnableInstructions // Guide the user to enable notifications\n              ,\n              children: \"How to Enable Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"uGSXS+U9qR76AjEQWV4Flqy+KFQ=\");\n_c = Settings;\nconst StyledPaper = styled(Paper)({\n  padding: '20px',\n  marginBottom: '20px',\n  backgroundColor: '#333',\n  color: '#fff',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n});\n_c2 = StyledPaper;\nexport default Settings;\nvar _c, _c2;\n$RefreshReg$(_c, \"Settings\");\n$RefreshReg$(_c2, \"StyledPaper\");","map":{"version":3,"names":["React","useContext","useState","Box","Grid","Typography","Paper","Switch","FormControlLabel","Divider","Button","styled","Notifications","NotificationContext","jsxDEV","_jsxDEV","Settings","_s","pushEnabled","togglePushNotifications","isBlocked","setIsBlocked","handleTogglePushNotifications","isEnabled","Notification","permission","showEnableInstructions","alert","component","sx","flexGrow","p","ml","xs","md","backgroundColor","color","minHeight","children","container","spacing","item","display","justifyContent","alignItems","variant","fileName","_jsxFileName","lineNumber","columnNumber","StyledPaper","marginRight","my","control","checked","onChange","e","target","label","mt","onClick","_c","padding","marginBottom","borderRadius","boxShadow","_c2","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/Settings.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Box, Grid, Typography, Paper, Switch, FormControlLabel, Divider, Button } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Notifications } from '@mui/icons-material';\r\nimport { NotificationContext } from '../contexts/NotificationContext';\r\n\r\nconst Settings = () => {\r\n  const { pushEnabled, togglePushNotifications } = useContext(NotificationContext);\r\n  const [isBlocked, setIsBlocked] = useState(false);\r\n\r\n  // Function to check if notifications are blocked\r\n  const handleTogglePushNotifications = (isEnabled) => {\r\n    if (Notification.permission === 'denied') {\r\n      setIsBlocked(true);  // If notifications are blocked, show the blocked message\r\n    } else {\r\n      togglePushNotifications(isEnabled);  // If not blocked, toggle the notification state\r\n    }\r\n  };\r\n\r\n  // Function to show a browser-specific guide to enable notifications\r\n  const showEnableInstructions = () => {\r\n    alert(\"To enable notifications, please go to your browser settings and allow notifications for this site.\");\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        ml: { xs: 0, md: '240px' },\r\n        backgroundColor: '#2c2c2c',\r\n        color: '#fff',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography variant=\"h4\">Settings</Typography>\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* Push Notifications */}\r\n        <Grid item xs={12}>\r\n          <StyledPaper>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Notifications sx={{ color: 'teal', marginRight: 2 }} />\r\n              <Typography variant=\"h6\">Notifications</Typography>\r\n            </Box>\r\n            <Divider sx={{ my: 2 }} />\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  color=\"primary\"\r\n                  checked={pushEnabled}\r\n                  onChange={(e) => handleTogglePushNotifications(e.target.checked)}\r\n                />\r\n              }\r\n              label=\"Push Notifications\"\r\n            />\r\n\r\n            {/* Show the message if notifications are blocked */}\r\n            {isBlocked && (\r\n              <Box mt={2} sx={{ color: 'red' }}>\r\n                <Typography variant=\"body1\">\r\n                  Push notifications are blocked in your browser settings. Please enable them manually.\r\n                </Typography>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  sx={{ mt: 1, backgroundColor: 'teal', color: '#fff' }}\r\n                  onClick={showEnableInstructions}  // Guide the user to enable notifications\r\n                >\r\n                  How to Enable Notifications\r\n                </Button>\r\n              </Box>\r\n            )}\r\n          </StyledPaper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst StyledPaper = styled(Paper)({\r\n  padding: '20px',\r\n  marginBottom: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#fff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n});\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}