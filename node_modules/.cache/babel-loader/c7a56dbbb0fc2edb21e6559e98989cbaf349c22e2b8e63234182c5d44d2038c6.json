{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Box,Grid,Paper,Typography,Avatar,IconButton,List,ListItem,ListItemIcon,ListItemText,Badge}from'@mui/material';import NotificationsIcon from'@mui/icons-material/Notifications';import ChatBubbleOutlineIcon from'@mui/icons-material/ChatBubbleOutline';import EventIcon from'@mui/icons-material/Event';import FlashOnIcon from'@mui/icons-material/FlashOn';import AccountBalanceWalletIcon from'@mui/icons-material/AccountBalanceWallet';import SchoolIcon from'@mui/icons-material/School';import{styled}from'@mui/material/styles';import{useNavigate}from'react-router-dom';import{useStudent}from'../contexts/StudentContext';import{Fade,Slide}from'@mui/material';import{NotificationContext}from'../contexts/NotificationContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{var _personalDetails$name;const navigate=useNavigate();const{currentStudent}=useStudent();// Use context to get the current student\nconst{sendNotification}=React.useContext(NotificationContext);// Use notification context\nconst[student,setStudent]=useState(null);const[error,setError]=useState(null);// Track if there's an error loading student data\nconst[alerts,setAlerts]=useState(()=>{// Load stored alerts from localStorage when the component mounts\nconst storedAlerts=localStorage.getItem('alerts');return storedAlerts?JSON.parse(storedAlerts):[];});useEffect(()=>{// Load student data dynamically based on the current student's ID\nconst loadStudentData=async()=>{if(currentStudent&&currentStudent.id){try{console.log(`Loading student data for: ${currentStudent.id}`);const data=await import(`../data/students/${currentStudent.id}.js`);// Dynamically import student file\nsetStudent(data.default);// Set the student data\n}catch(err){console.error('Error loading student data:',err);setError('Failed to load student data.');}}else{setError('No current student data available.');}};loadStudentData();},[currentStudent]);useEffect(()=>{if(student){handleReminders();// Schedule reminders only when student data is available\n}},[student]);// Reminder handling logic, including quiz reminders 2 hours 30 minutes after session start\nconst handleReminders=()=>{const{tutoringHistory=[]}=student;const currentDate=new Date();// Filter upcoming sessions\nconst upcomingSessions=tutoringHistory.filter(session=>new Date(session.date)>currentDate);// 1. Sessions ending soon (remind 25% before)\nupcomingSessions.forEach(session=>{const sessionDateTime=new Date(`${session.date}T${session.time||'00:00:00'}`);const sessionDuration=2*60*60*1000;// Assume 2-hour session in milliseconds\n// Calculate when the session will end\nconst sessionEndTime=sessionDateTime.getTime()+sessionDuration;// Calculate time for sending the quiz reminder 2 hours 30 minutes after session start time\nconst quizReminderTime=sessionDateTime.getTime()+2*60*60*1000+30*60*1000;// 2 hours + 30 minutes\n// Schedule quiz reminder 2 hours 30 minutes after session start\nconst timeUntilQuizReminder=quizReminderTime-currentDate.getTime();if(timeUntilQuizReminder>0){setTimeout(()=>{sendNotification('Quiz Reminder',`Please don't forget to take your quiz for the topic: ${session.topic}.`);addAlert('Quiz Reminder',`Please don't forget to take your quiz for the topic: ${session.topic}.`);},timeUntilQuizReminder);}});// 2. Notify when the last session of the month happens\nconst lastSessionOfMonth=tutoringHistory.reduce((lastSession,session)=>{const sessionDate=new Date(session.date);return sessionDate.getMonth()===currentDate.getMonth()&&sessionDate>lastSession?sessionDate:lastSession;},new Date(0));if(lastSessionOfMonth>new Date(0)){const timeUntilLastSession=lastSessionOfMonth-currentDate;if(timeUntilLastSession>0){setTimeout(()=>{sendNotification('Last Session of the Month',`Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);addAlert('Last Session of the Month',`Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);},timeUntilLastSession);}}// 3. Notify when a new session for the month begins\nconst firstSessionOfMonth=tutoringHistory.reduce((firstSession,session)=>{const sessionDate=new Date(session.date);return sessionDate.getMonth()===currentDate.getMonth()&&sessionDate<firstSession?sessionDate:firstSession;},new Date(9999,11,31));if(firstSessionOfMonth<new Date(9999,11,31)){const timeUntilFirstSession=firstSessionOfMonth-currentDate;if(timeUntilFirstSession>0){setTimeout(()=>{sendNotification('New Session Starting',`Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);addAlert('New Session Starting',`Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);},timeUntilFirstSession);}}// 4. Remind students to take quizzes (default 5-minute reminder after login)\nsetTimeout(()=>{sendNotification('Quiz Reminder','Don’t forget to take your quizzes to sharpen your mind!');addAlert('Quiz Reminder','Don’t forget to take your quizzes to sharpen your mind!');},5*60*1000);// Remind after 5 minutes\n};// Helper function to add an alert to the alerts state and localStorage\nconst addAlert=(title,body)=>{const newAlert={title,body};setAlerts(prevAlerts=>{const updatedAlerts=[...prevAlerts,newAlert];localStorage.setItem('alerts',JSON.stringify(updatedAlerts));// Persist to localStorage\nreturn updatedAlerts;});};// Show an error message if there's a problem loading the student data\nif(error){return/*#__PURE__*/_jsx(Typography,{sx:{color:'#ffffff',textAlign:'center',marginTop:'20px'},children:error});}// If student data is still loading, show a fun and modern loader\nif(!student){return/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',height:'100vh',backgroundColor:'#2c2c2c',color:'#fff'},children:\"Loading...\"});}// Deconstruct data from the student object\nconst{personalDetails,paymentInformation=[],tutoringHistory=[],quizHistory=[]}=student;// Extract the first letter of the student's name\nconst firstLetter=(personalDetails===null||personalDetails===void 0?void 0:(_personalDetails$name=personalDetails.name)===null||_personalDetails$name===void 0?void 0:_personalDetails$name.charAt(0).toUpperCase())||'S';// Get the latest payment session information\nconst latestPayment=paymentInformation.length>0?paymentInformation[paymentInformation.length-1]:null;const endDate=latestPayment?new Date(latestPayment.endDate):null;const hasActiveSession=latestPayment&&endDate&&endDate>new Date();const balance=hasActiveSession?latestPayment.amountPaid:'00';const sessionType=hasActiveSession?latestPayment.sessionType:'No active session';const startDate=hasActiveSession?new Date(latestPayment.startDate).toLocaleDateString():'N/A';const endDateDisplay=hasActiveSession?new Date(latestPayment.endDate).toLocaleDateString():'N/A';const noActiveSessionMessage=!hasActiveSession?'No active payments. Please make a payment to continue your sessions.':'';const totalCorrect=quizHistory.reduce((acc,quiz)=>acc+quiz.score,0);const totalQuestions=quizHistory.reduce((acc,quiz)=>acc+quiz.numQuestions,0);const totalPercentage=totalQuestions>0?(totalCorrect/totalQuestions*100).toFixed(2):'N/A';const upcomingSessions=tutoringHistory.filter(session=>new Date(session.date)>new Date()).slice(0,4);const handleQuizzesClick=()=>{navigate('/ai-quiz');};const handleStudentProfileClick=()=>{navigate('/student-profile');};const handleFlashcardsClick=()=>{navigate('/flashcards');};const handlePaymentSessionClick=()=>{navigate('/payment-session');};return/*#__PURE__*/_jsx(Box,{component:\"main\",sx:{flexGrow:1,p:3,ml:{xs:0,md:'240px'},// Add margin-left on larger screens to make space for the sidebar\nbackgroundColor:'#2c2c2c',color:'#ffffff',minHeight:'100vh'},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Fade,{in:true,timeout:1000,children:/*#__PURE__*/_jsxs(Box,{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",sx:{color:'#ffffff'},children:personalDetails!==null&&personalDetails!==void 0&&personalDetails.name?`Hello, ${personalDetails.name}!`:'Hello, Student!'}),/*#__PURE__*/_jsxs(Box,{sx:{position:'relative',display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(IconButton,{color:\"primary\",children:/*#__PURE__*/_jsx(Badge,{badgeContent:alerts.length,color:\"error\",sx:{position:'absolute',top:0,right:0},children:/*#__PURE__*/_jsx(NotificationsIcon,{sx:{color:'teal'}})})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleStudentProfileClick,children:/*#__PURE__*/_jsx(Avatar,{sx:{cursor:'pointer',backgroundColor:'teal',color:'#fff',width:48,height:48},children:firstLetter})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Slide,{direction:\"up\",in:true,timeout:1000,children:/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{display:'flex',alignItems:'center',color:'#ffffff','&:hover':{color:'teal',cursor:'pointer'}},onClick:handlePaymentSessionClick,children:[/*#__PURE__*/_jsx(AccountBalanceWalletIcon,{sx:{mr:1,color:hasActiveSession?'teal':'darkgray'}}),\"Your Balance: \",balance!=='N/A'?`R${balance}`:'00']}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'#ffffff',mt:1},children:[\"Session Type: \",sessionType]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'#ffffff'},children:[\"Start Date: \",startDate]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'#ffffff'},children:[\"End Date: \",endDateDisplay]}),!hasActiveSession&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'red',mt:1},children:noActiveSessionMessage})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Slide,{direction:\"left\",in:true,timeout:800,children:/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{display:'flex',alignItems:'center',color:'#ffffff'},children:[/*#__PURE__*/_jsx(FlashOnIcon,{sx:{mr:1,color:'teal'}}),\" Active Progress\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{onClick:handleFlashcardsClick,sx:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(FlashOnIcon,{sx:{color:'teal'}})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Flashcards: 0% Completed\",primaryTypographyProps:{color:'#ffffff'}})]}),/*#__PURE__*/_jsxs(ListItem,{onClick:handleQuizzesClick,sx:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(SchoolIcon,{sx:{color:'teal'}})}),/*#__PURE__*/_jsx(ListItemText,{primary:`Quizzes: ${totalPercentage}% Total Pass Rate`,primaryTypographyProps:{color:'#ffffff'}})]})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:6,children:/*#__PURE__*/_jsx(Slide,{direction:\"right\",in:true,timeout:800,children:/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{display:'flex',alignItems:'center',color:'#ffffff'},children:[/*#__PURE__*/_jsx(EventIcon,{sx:{mr:1,color:'teal'}}),\" Upcoming Sessions\"]}),/*#__PURE__*/_jsx(List,{children:upcomingSessions.length>0?upcomingSessions.map((session,index)=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:`${session.subject} - ${session.topic}`,secondary:`Date: ${new Date(session.date).toLocaleDateString()}`,primaryTypographyProps:{color:'#ffffff',fontSize:'0.9rem'},secondaryTypographyProps:{color:'#ffffff',fontSize:'0.8rem'}})},index)):/*#__PURE__*/_jsx(Typography,{sx:{color:'#ffffff'},children:\"No upcoming sessions.\"})})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Slide,{direction:\"up\",in:true,timeout:1000,children:/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{display:'flex',alignItems:'center',color:'#ffffff'},children:[/*#__PURE__*/_jsx(ChatBubbleOutlineIcon,{sx:{mr:1,color:'teal'}}),\" Messages\"]}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"John Doe\",secondary:\"Hi, can you help me with my assignment?\",primaryTypographyProps:{color:'#ffffff',fontSize:'0.9rem'},secondaryTypographyProps:{color:'#ffffff',fontSize:'0.8rem'}})}),/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:\"Tutor Anna\",secondary:\"Don't forget your session tomorrow at 10 AM!\",primaryTypographyProps:{color:'#ffffff',fontSize:'0.9rem'},secondaryTypographyProps:{color:'#ffffff',fontSize:'0.8rem'}})})]})]})})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Slide,{direction:\"up\",in:true,timeout:1000,children:/*#__PURE__*/_jsxs(StyledPaper,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{display:'flex',alignItems:'center',color:'#ffffff'},children:[/*#__PURE__*/_jsx(NotificationsIcon,{sx:{mr:1,color:'teal'}}),\" Alerts & Reminders\"]}),/*#__PURE__*/_jsx(List,{children:alerts.length>0?alerts.map((alert,index)=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:alert.title,secondary:alert.body,primaryTypographyProps:{color:'#ffffff',fontSize:'0.9rem'}})},index)):/*#__PURE__*/_jsx(Typography,{sx:{color:'#ffffff'},children:\"No alerts at the moment.\"})})]})})})]})});};// Styled components and Loader definition\nconst StyledPaper=styled(Paper)({padding:'20px',marginBottom:'20px',backgroundColor:'#333',color:'#ffffff',borderRadius:'8px',boxShadow:'0 4px 8px rgba(0, 0, 0, 0.2)'});export default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","Box","Grid","Paper","Typography","Avatar","IconButton","List","ListItem","ListItemIcon","ListItemText","Badge","NotificationsIcon","ChatBubbleOutlineIcon","EventIcon","FlashOnIcon","AccountBalanceWalletIcon","SchoolIcon","styled","useNavigate","useStudent","Fade","Slide","NotificationContext","jsx","_jsx","jsxs","_jsxs","Dashboard","_personalDetails$name","navigate","currentStudent","sendNotification","useContext","student","setStudent","error","setError","alerts","setAlerts","storedAlerts","localStorage","getItem","JSON","parse","loadStudentData","id","console","log","data","default","err","handleReminders","tutoringHistory","currentDate","Date","upcomingSessions","filter","session","date","forEach","sessionDateTime","time","sessionDuration","sessionEndTime","getTime","quizReminderTime","timeUntilQuizReminder","setTimeout","topic","addAlert","lastSessionOfMonth","reduce","lastSession","sessionDate","getMonth","timeUntilLastSession","toLocaleDateString","firstSessionOfMonth","firstSession","timeUntilFirstSession","title","body","newAlert","prevAlerts","updatedAlerts","setItem","stringify","sx","color","textAlign","marginTop","children","display","justifyContent","alignItems","height","backgroundColor","personalDetails","paymentInformation","quizHistory","firstLetter","name","charAt","toUpperCase","latestPayment","length","endDate","hasActiveSession","balance","amountPaid","sessionType","startDate","endDateDisplay","noActiveSessionMessage","totalCorrect","acc","quiz","score","totalQuestions","numQuestions","totalPercentage","toFixed","slice","handleQuizzesClick","handleStudentProfileClick","handleFlashcardsClick","handlePaymentSessionClick","component","flexGrow","p","ml","xs","md","minHeight","container","spacing","item","in","timeout","variant","position","badgeContent","top","right","onClick","cursor","width","direction","StyledPaper","mr","mt","primary","primaryTypographyProps","map","index","subject","secondary","fontSize","secondaryTypographyProps","alert","padding","marginBottom","borderRadius","boxShadow"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Avatar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Badge,\r\n} from '@mui/material';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport ChatBubbleOutlineIcon from '@mui/icons-material/ChatBubbleOutline';\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport FlashOnIcon from '@mui/icons-material/FlashOn';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useStudent } from '../contexts/StudentContext';\r\nimport { Fade, Slide } from '@mui/material';\r\nimport { NotificationContext } from '../contexts/NotificationContext';\r\n\r\nconst Dashboard = () => {\r\n  const navigate = useNavigate();\r\n  const { currentStudent } = useStudent(); // Use context to get the current student\r\n  const { sendNotification } = React.useContext(NotificationContext); // Use notification context\r\n  const [student, setStudent] = useState(null);\r\n  const [error, setError] = useState(null); // Track if there's an error loading student data\r\n  const [alerts, setAlerts] = useState(() => {\r\n    // Load stored alerts from localStorage when the component mounts\r\n    const storedAlerts = localStorage.getItem('alerts');\r\n    return storedAlerts ? JSON.parse(storedAlerts) : [];\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load student data dynamically based on the current student's ID\r\n    const loadStudentData = async () => {\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          console.log(`Loading student data for: ${currentStudent.id}`);\r\n          const data = await import(`../data/students/${currentStudent.id}.js`); // Dynamically import student file\r\n          setStudent(data.default); // Set the student data\r\n\t\t  \r\n\t\t  \r\n\t\t  \r\n        } catch (err) {\r\n          console.error('Error loading student data:', err);\r\n          setError('Failed to load student data.');\r\n        }\r\n      } else {\r\n        setError('No current student data available.');\r\n      }\r\n    };\r\n\r\n    loadStudentData();\r\n  }, [currentStudent]);\r\n\r\n  useEffect(() => {\r\n    if (student) {\r\n      handleReminders(); // Schedule reminders only when student data is available\r\n    }\r\n  }, [student]);\r\n\r\n  // Reminder handling logic, including quiz reminders 2 hours 30 minutes after session start\r\n  const handleReminders = () => {\r\n    const { tutoringHistory = [] } = student;\r\n    const currentDate = new Date();\r\n\r\n    // Filter upcoming sessions\r\n    const upcomingSessions = tutoringHistory.filter((session) => new Date(session.date) > currentDate);\r\n\r\n    // 1. Sessions ending soon (remind 25% before)\r\n    upcomingSessions.forEach((session) => {\r\n      const sessionDateTime = new Date(`${session.date}T${session.time || '00:00:00'}`);\r\n      const sessionDuration = 2 * 60 * 60 * 1000; // Assume 2-hour session in milliseconds\r\n\r\n      // Calculate when the session will end\r\n      const sessionEndTime = sessionDateTime.getTime() + sessionDuration;\r\n\r\n      // Calculate time for sending the quiz reminder 2 hours 30 minutes after session start time\r\n      const quizReminderTime = sessionDateTime.getTime() + (2 * 60 * 60 * 1000) + (30 * 60 * 1000); // 2 hours + 30 minutes\r\n\r\n      // Schedule quiz reminder 2 hours 30 minutes after session start\r\n      const timeUntilQuizReminder = quizReminderTime - currentDate.getTime();\r\n      if (timeUntilQuizReminder > 0) {\r\n        setTimeout(() => {\r\n          sendNotification('Quiz Reminder', `Please don't forget to take your quiz for the topic: ${session.topic}.`);\r\n          addAlert('Quiz Reminder', `Please don't forget to take your quiz for the topic: ${session.topic}.`);\r\n        }, timeUntilQuizReminder);\r\n      }\r\n    });\r\n\r\n    // 2. Notify when the last session of the month happens\r\n    const lastSessionOfMonth = tutoringHistory.reduce((lastSession, session) => {\r\n      const sessionDate = new Date(session.date);\r\n      return sessionDate.getMonth() === currentDate.getMonth() && sessionDate > lastSession ? sessionDate : lastSession;\r\n    }, new Date(0));\r\n\r\n    if (lastSessionOfMonth > new Date(0)) {\r\n      const timeUntilLastSession = lastSessionOfMonth - currentDate;\r\n      if (timeUntilLastSession > 0) {\r\n        setTimeout(() => {\r\n          sendNotification('Last Session of the Month', `Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);\r\n          addAlert('Last Session of the Month', `Your last session this month is on ${lastSessionOfMonth.toLocaleDateString()}.`);\r\n        }, timeUntilLastSession);\r\n      }\r\n    }\r\n\r\n    // 3. Notify when a new session for the month begins\r\n    const firstSessionOfMonth = tutoringHistory.reduce((firstSession, session) => {\r\n      const sessionDate = new Date(session.date);\r\n      return sessionDate.getMonth() === currentDate.getMonth() && sessionDate < firstSession ? sessionDate : firstSession;\r\n    }, new Date(9999, 11, 31));\r\n\r\n    if (firstSessionOfMonth < new Date(9999, 11, 31)) {\r\n      const timeUntilFirstSession = firstSessionOfMonth - currentDate;\r\n      if (timeUntilFirstSession > 0) {\r\n        setTimeout(() => {\r\n          sendNotification('New Session Starting', `Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);\r\n          addAlert('New Session Starting', `Your first session this month starts on ${firstSessionOfMonth.toLocaleDateString()}.`);\r\n        }, timeUntilFirstSession);\r\n      }\r\n    }\r\n\r\n    // 4. Remind students to take quizzes (default 5-minute reminder after login)\r\n    setTimeout(() => {\r\n      sendNotification('Quiz Reminder', 'Don’t forget to take your quizzes to sharpen your mind!');\r\n      addAlert('Quiz Reminder', 'Don’t forget to take your quizzes to sharpen your mind!');\r\n    }, 5 * 60 * 1000); // Remind after 5 minutes\r\n  };\r\n\r\n  // Helper function to add an alert to the alerts state and localStorage\r\n  const addAlert = (title, body) => {\r\n    const newAlert = { title, body };\r\n    setAlerts((prevAlerts) => {\r\n      const updatedAlerts = [...prevAlerts, newAlert];\r\n      localStorage.setItem('alerts', JSON.stringify(updatedAlerts)); // Persist to localStorage\r\n      return updatedAlerts;\r\n    });\r\n  };\r\n\r\n  // Show an error message if there's a problem loading the student data\r\n  if (error) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  // If student data is still loading, show a fun and modern loader\r\n  if (!student) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '100vh',\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n        }}\r\n      >\r\n        Loading...\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Deconstruct data from the student object\r\n  const { personalDetails, paymentInformation = [], tutoringHistory = [], quizHistory = [] } = student;\r\n\r\n  // Extract the first letter of the student's name\r\n  const firstLetter = personalDetails?.name?.charAt(0).toUpperCase() || 'S';\r\n\r\n  // Get the latest payment session information\r\n  const latestPayment = paymentInformation.length > 0 ? paymentInformation[paymentInformation.length - 1] : null;\r\n  const endDate = latestPayment ? new Date(latestPayment.endDate) : null;\r\n\r\n  const hasActiveSession = latestPayment && endDate && endDate > new Date();\r\n\r\n  const balance = hasActiveSession ? latestPayment.amountPaid : '00';\r\n  const sessionType = hasActiveSession ? latestPayment.sessionType : 'No active session';\r\n  const startDate = hasActiveSession ? new Date(latestPayment.startDate).toLocaleDateString() : 'N/A';\r\n  const endDateDisplay = hasActiveSession ? new Date(latestPayment.endDate).toLocaleDateString() : 'N/A';\r\n\r\n  const noActiveSessionMessage = !hasActiveSession\r\n    ? 'No active payments. Please make a payment to continue your sessions.'\r\n    : '';\r\n\r\n  const totalCorrect = quizHistory.reduce((acc, quiz) => acc + quiz.score, 0);\r\n  const totalQuestions = quizHistory.reduce((acc, quiz) => acc + quiz.numQuestions, 0);\r\n  const totalPercentage = totalQuestions > 0 ? ((totalCorrect / totalQuestions) * 100).toFixed(2) : 'N/A';\r\n\r\n  const upcomingSessions = tutoringHistory\r\n    .filter((session) => new Date(session.date) > new Date())\r\n    .slice(0, 4);\r\n\r\n  const handleQuizzesClick = () => {\r\n    navigate('/ai-quiz');\r\n  };\r\n  const handleStudentProfileClick = () => {\r\n    navigate('/student-profile');\r\n  };\r\n\r\n  const handleFlashcardsClick = () => {\r\n    navigate('/flashcards');\r\n  };\r\n\r\n  const handlePaymentSessionClick = () => {\r\n    navigate('/payment-session');\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        ml: { xs: 0, md: '240px' }, // Add margin-left on larger screens to make space for the sidebar\r\n        backgroundColor: '#2c2c2c',\r\n        color: '#ffffff',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        {/* Welcome Message */}\r\n        <Grid item xs={12}>\r\n          <Fade in={true} timeout={1000}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Typography variant=\"h5\" sx={{ color: '#ffffff' }}>\r\n                {personalDetails?.name ? `Hello, ${personalDetails.name}!` : 'Hello, Student!'}\r\n              </Typography>\r\n              <Box sx={{ position: 'relative', display: 'flex', alignItems: 'center' }}>\r\n                <IconButton color=\"primary\">\r\n                  <Badge\r\n                    badgeContent={alerts.length}\r\n                    color=\"error\"\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      top: 0,\r\n                      right: 0,\r\n                    }}\r\n                  >\r\n                    <NotificationsIcon sx={{ color: 'teal' }} />\r\n                  </Badge>\r\n                </IconButton>\r\n                <IconButton onClick={handleStudentProfileClick}>\r\n                  <Avatar sx={{ cursor: 'pointer', backgroundColor: 'teal', color: '#fff', width: 48, height: 48 }}>\r\n                    {firstLetter}\r\n                  </Avatar>\r\n                </IconButton>\r\n              </Box>\r\n            </Box>\r\n          </Fade>\r\n        </Grid>\r\n\r\n        {/* Balance and Session Details */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography\r\n                variant=\"body1\"\r\n                sx={{\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  color: '#ffffff',\r\n                  '&:hover': { color: 'teal', cursor: 'pointer' },\r\n                }}\r\n                onClick={handlePaymentSessionClick}\r\n              >\r\n                <AccountBalanceWalletIcon sx={{ mr: 1, color: hasActiveSession ? 'teal' : 'darkgray' }} />\r\n                Your Balance: {balance !== 'N/A' ? `R${balance}` : '00'}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff', mt: 1 }}>\r\n                Session Type: {sessionType}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff' }}>\r\n                Start Date: {startDate}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#ffffff' }}>\r\n                End Date: {endDateDisplay}\r\n              </Typography>\r\n              {!hasActiveSession && (\r\n                <Typography variant=\"body2\" sx={{ color: 'red', mt: 1 }}>\r\n                  {noActiveSessionMessage}\r\n                </Typography>\r\n              )}\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Active Progress Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Slide direction=\"left\" in={true} timeout={800}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <FlashOnIcon sx={{ mr: 1, color: 'teal' }} /> Active Progress\r\n              </Typography>\r\n              <List>\r\n                <ListItem onClick={handleFlashcardsClick} sx={{ cursor: 'pointer' }}>\r\n                  <ListItemIcon>\r\n                    <FlashOnIcon sx={{ color: 'teal' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Flashcards: 0% Completed\" primaryTypographyProps={{ color: '#ffffff' }} />\r\n                </ListItem>\r\n                <ListItem onClick={handleQuizzesClick} sx={{ cursor: 'pointer' }}>\r\n                  <ListItemIcon>\r\n                    <SchoolIcon sx={{ color: 'teal' }} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={`Quizzes: ${totalPercentage}% Total Pass Rate`} primaryTypographyProps={{ color: '#ffffff' }} />\r\n                </ListItem>\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Upcoming Sessions Section */}\r\n        <Grid item xs={12} md={6}>\r\n          <Slide direction=\"right\" in={true} timeout={800}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <EventIcon sx={{ mr: 1, color: 'teal' }} /> Upcoming Sessions\r\n              </Typography>\r\n              <List>\r\n                {upcomingSessions.length > 0 ? (\r\n                  upcomingSessions.map((session, index) => (\r\n                    <ListItem key={index}>\r\n                      <ListItemText\r\n                        primary={`${session.subject} - ${session.topic}`}\r\n                        secondary={`Date: ${new Date(session.date).toLocaleDateString()}`}\r\n                        primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                        secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                      />\r\n                    </ListItem>\r\n                  ))\r\n                ) : (\r\n                  <Typography sx={{ color: '#ffffff' }}>No upcoming sessions.</Typography>\r\n                )}\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Messaging Section */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <ChatBubbleOutlineIcon sx={{ mr: 1, color: 'teal' }} /> Messages\r\n              </Typography>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"John Doe\"\r\n                    secondary=\"Hi, can you help me with my assignment?\"\r\n                    primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                    secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"Tutor Anna\"\r\n                    secondary=\"Don't forget your session tomorrow at 10 AM!\"\r\n                    primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                    secondaryTypographyProps={{ color: '#ffffff', fontSize: '0.8rem' }}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n\r\n        {/* Additional Section: Alerts or Reminders */}\r\n        <Grid item xs={12}>\r\n          <Slide direction=\"up\" in={true} timeout={1000}>\r\n            <StyledPaper>\r\n              <Typography variant=\"body1\" sx={{ display: 'flex', alignItems: 'center', color: '#ffffff' }}>\r\n                <NotificationsIcon sx={{ mr: 1, color: 'teal' }} /> Alerts & Reminders\r\n              </Typography>\r\n              <List>\r\n                {alerts.length > 0 ? (\r\n                  alerts.map((alert, index) => (\r\n                    <ListItem key={index}>\r\n                      <ListItemText\r\n                        primary={alert.title}\r\n                        secondary={alert.body}\r\n                        primaryTypographyProps={{ color: '#ffffff', fontSize: '0.9rem' }}\r\n                      />\r\n                    </ListItem>\r\n                  ))\r\n                ) : (\r\n                  <Typography sx={{ color: '#ffffff' }}>No alerts at the moment.</Typography>\r\n                )}\r\n              </List>\r\n            </StyledPaper>\r\n          </Slide>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Styled components and Loader definition\r\nconst StyledPaper = styled(Paper)({\r\n  padding: '20px',\r\n  marginBottom: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#ffffff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n});\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}