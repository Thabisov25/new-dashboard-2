{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Web\\\\vincentpt.co.za\\\\src\\\\components\\\\UpcomingSessions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Grid, Typography, Paper, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpcomingSessions = () => {\n  _s();\n  const {\n    currentStudent\n  } = useStudent(); // Get the current student from context\n  const [student, setStudent] = useState(null);\n  const [error, setError] = useState(null);\n  const [upcomingSessions, setUpcomingSessions] = useState([]);\n  useEffect(() => {\n    const loadStudentData = async () => {\n      if (currentStudent && currentStudent.id) {\n        try {\n          const data = await import(`../data/students/${currentStudent.id}.js`);\n          setStudent(data.default);\n\n          // Filter upcoming sessions\n          const upcoming = data.default.comingSessions.filter(session => new Date(`${session.date}T${session.time || '00:00:00'}`) > new Date());\n          setUpcomingSessions(upcoming);\n\n          // Schedule session reminders 2 hours before the session\n          scheduleSessionReminders(upcoming);\n        } catch (err) {\n          console.error('Error loading student data:', err);\n          setError('Failed to load student data.');\n        }\n      } else {\n        setError('No current student data available.');\n      }\n    };\n    loadStudentData();\n  }, [currentStudent]);\n\n  // Function to schedule reminders for upcoming sessions\n  const scheduleSessionReminders = sessions => {\n    sessions.forEach(session => {\n      const sessionDateTime = new Date(`${session.date}T${session.time || '00:00:00'}`); // Full date & time of session\n      const now = new Date();\n\n      // Calculate time for reminder (2 hours before the session)\n      const twoHoursBefore = sessionDateTime.getTime() - 2 * 60 * 60 * 1000; // 2 hours in milliseconds\n      const timeUntilReminder = twoHoursBefore - now.getTime();\n      if (timeUntilReminder > 0) {\n        setTimeout(() => {\n          sendNotification(session.subject, session.date, session.time);\n        }, timeUntilReminder);\n      }\n    });\n  };\n\n  // Function to send notification\n  const sendNotification = (subject, sessionDate, sessionTime) => {\n    const timeText = sessionTime ? `at ${sessionTime.slice(0, 5)}` : ''; // Format time as HH:mm\n    if (Notification.permission === 'granted') {\n      const options = {\n        body: `You have an upcoming session for ${subject} in 2 hours ${timeText}.`,\n        icon: '/logo192.png' // Your app's logo\n      };\n      new Notification('Upcoming Session Reminder', options);\n    } else if (Notification.permission === 'default') {\n      // If permission has not been requested yet, request it\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          sendNotification(subject, sessionDate, sessionTime);\n        }\n      });\n    } else {\n      console.log('Push notifications are disabled.');\n    }\n  };\n\n  // Show error if there's an issue loading the student data\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If data is still loading, show \"Loading...\"\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#ffffff',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  const totalSessions = student.comingSessions.length;\n  const sessionsLeft = upcomingSessions.length;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"main\",\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      ml: {\n        xs: 0,\n        md: '240px'\n      },\n      // Add margin-left on larger screens to account for sidebar\n      backgroundColor: '#2c2c2c',\n      color: '#fff',\n      minHeight: '100vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          sx: {\n            fontSize: '1.8rem',\n            textAlign: 'center',\n            fontWeight: 'bold'\n          },\n          children: [\" \", \"Upcoming Sessions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SummaryPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontWeight: 'bold',\n              color: 'teal'\n            },\n            children: \"Sessions Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontSize: '1rem'\n            },\n            children: [\" \", \"Total Sessions: \", totalSessions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontSize: '1rem'\n            },\n            children: [\" \", \"Sessions Left: \", sessionsLeft]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(SessionListPaper, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontWeight: 'bold',\n              color: 'teal'\n            },\n            children: \"Upcoming Sessions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), upcomingSessions.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n            children: upcomingSessions.map(session => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: session.subject,\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: '#ccc'\n                      },\n                      children: [\"Date: \", new Date(session.date).toLocaleDateString()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 29\n                    }, this), session.time && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: '#ccc'\n                      },\n                      children: [\"Time: \", session.time.slice(0, 5), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true),\n                  primaryTypographyProps: {\n                    style: {\n                      color: '#fff',\n                      fontSize: '1rem',\n                      fontWeight: 'bold'\n                    }\n                  } // Reduced font size\n                  ,\n                  secondaryTypographyProps: {\n                    style: {\n                      color: '#ccc',\n                      fontSize: '0.9rem'\n                    }\n                  } // Reduced font size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                sx: {\n                  backgroundColor: '#555'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)]\n            }, session.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            sx: {\n              color: '#ccc'\n            },\n            children: \"No upcoming sessions available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(UpcomingSessions, \"EzXowGY85EaiUe44DIMuHfdCb8E=\", false, function () {\n  return [useStudent];\n});\n_c = UpcomingSessions;\nconst SummaryPaper = styled(Paper)({\n  padding: '20px',\n  backgroundColor: '#333',\n  color: '#fff',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n  textAlign: 'center'\n});\n_c2 = SummaryPaper;\nconst SessionListPaper = styled(Paper)({\n  padding: '20px',\n  backgroundColor: '#333',\n  color: '#fff',\n  borderRadius: '8px',\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)'\n});\n_c3 = SessionListPaper;\nexport default UpcomingSessions;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UpcomingSessions\");\n$RefreshReg$(_c2, \"SummaryPaper\");\n$RefreshReg$(_c3, \"SessionListPaper\");","map":{"version":3,"names":["React","useEffect","useState","Box","Grid","Typography","Paper","List","ListItem","ListItemText","Divider","styled","useStudent","jsxDEV","_jsxDEV","Fragment","_Fragment","UpcomingSessions","_s","currentStudent","student","setStudent","error","setError","upcomingSessions","setUpcomingSessions","loadStudentData","id","data","default","upcoming","comingSessions","filter","session","Date","date","time","scheduleSessionReminders","err","console","sessions","forEach","sessionDateTime","now","twoHoursBefore","getTime","timeUntilReminder","setTimeout","sendNotification","subject","sessionDate","sessionTime","timeText","slice","Notification","permission","options","body","icon","requestPermission","then","log","sx","color","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","totalSessions","length","sessionsLeft","component","flexGrow","p","ml","xs","md","backgroundColor","minHeight","container","spacing","item","variant","fontSize","fontWeight","SummaryPaper","SessionListPaper","map","primary","secondary","toLocaleDateString","primaryTypographyProps","style","secondaryTypographyProps","_c","padding","borderRadius","boxShadow","_c2","_c3","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/components/UpcomingSessions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Box, Grid, Typography, Paper, List, ListItem, ListItemText, Divider } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\r\n\r\nconst UpcomingSessions = () => {\r\n  const { currentStudent } = useStudent(); // Get the current student from context\r\n  const [student, setStudent] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [upcomingSessions, setUpcomingSessions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadStudentData = async () => {\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          const data = await import(`../data/students/${currentStudent.id}.js`);\r\n          setStudent(data.default);\r\n\r\n          // Filter upcoming sessions\r\n          const upcoming = data.default.comingSessions.filter(\r\n            (session) => new Date(`${session.date}T${session.time || '00:00:00'}`) > new Date()\r\n          );\r\n          setUpcomingSessions(upcoming);\r\n\r\n          // Schedule session reminders 2 hours before the session\r\n          scheduleSessionReminders(upcoming);\r\n        } catch (err) {\r\n          console.error('Error loading student data:', err);\r\n          setError('Failed to load student data.');\r\n        }\r\n      } else {\r\n        setError('No current student data available.');\r\n      }\r\n    };\r\n\r\n    loadStudentData();\r\n  }, [currentStudent]);\r\n\r\n  // Function to schedule reminders for upcoming sessions\r\n  const scheduleSessionReminders = (sessions) => {\r\n    sessions.forEach((session) => {\r\n      const sessionDateTime = new Date(`${session.date}T${session.time || '00:00:00'}`); // Full date & time of session\r\n      const now = new Date();\r\n\r\n      // Calculate time for reminder (2 hours before the session)\r\n      const twoHoursBefore = sessionDateTime.getTime() - 2 * 60 * 60 * 1000; // 2 hours in milliseconds\r\n      const timeUntilReminder = twoHoursBefore - now.getTime();\r\n\r\n      if (timeUntilReminder > 0) {\r\n        setTimeout(() => {\r\n          sendNotification(session.subject, session.date, session.time);\r\n        }, timeUntilReminder);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Function to send notification\r\n  const sendNotification = (subject, sessionDate, sessionTime) => {\r\n    const timeText = sessionTime ? `at ${sessionTime.slice(0, 5)}` : ''; // Format time as HH:mm\r\n    if (Notification.permission === 'granted') {\r\n      const options = {\r\n        body: `You have an upcoming session for ${subject} in 2 hours ${timeText}.`,\r\n        icon: '/logo192.png', // Your app's logo\r\n      };\r\n      new Notification('Upcoming Session Reminder', options);\r\n    } else if (Notification.permission === 'default') {\r\n      // If permission has not been requested yet, request it\r\n      Notification.requestPermission().then(permission => {\r\n        if (permission === 'granted') {\r\n          sendNotification(subject, sessionDate, sessionTime);\r\n        }\r\n      });\r\n    } else {\r\n      console.log('Push notifications are disabled.');\r\n    }\r\n  };\r\n\r\n  // Show error if there's an issue loading the student data\r\n  if (error) {\r\n    return <Typography sx={{ color: 'red', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  // If data is still loading, show \"Loading...\"\r\n  if (!student) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>Loading...</Typography>;\r\n  }\r\n\r\n  const totalSessions = student.comingSessions.length;\r\n  const sessionsLeft = upcomingSessions.length;\r\n\r\n  return (\r\n    <Box\r\n      component=\"main\"\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        ml: { xs: 0, md: '240px' }, // Add margin-left on larger screens to account for sidebar\r\n        backgroundColor: '#2c2c2c',\r\n        color: '#fff',\r\n        minHeight: '100vh',\r\n      }}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\" sx={{ fontSize: '1.8rem', textAlign: 'center', fontWeight: 'bold' }}> {/* Reduced from h1 to h5 */ }\r\n            Upcoming Sessions\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {/* Summary Box */ }\r\n        <Grid item xs={12} md={6}>\r\n          <SummaryPaper>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: 'teal' }}>Sessions Overview</Typography>\r\n            <Typography variant=\"body2\" sx={{ fontSize: '1rem' }}> {/* Reduced from body1 to body2 */ }\r\n              Total Sessions: {totalSessions}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ fontSize: '1rem' }}> {/* Reduced from body1 to body2 */ }\r\n              Sessions Left: {sessionsLeft}\r\n            </Typography>\r\n          </SummaryPaper>\r\n        </Grid>\r\n\r\n        {/* Upcoming Sessions List */ }\r\n        <Grid item xs={12} md={6}>\r\n          <SessionListPaper>\r\n            <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: 'teal' }}>Upcoming Sessions</Typography>\r\n            {upcomingSessions.length > 0 ? (\r\n              <List>\r\n                {upcomingSessions.map((session) => (\r\n                  <React.Fragment key={session.id}>\r\n                    <ListItem>\r\n                      <ListItemText\r\n                        primary={session.subject}\r\n                        secondary={\r\n                          <>\r\n                            <Typography variant=\"body2\" sx={{ color: '#ccc' }}>\r\n                              Date: {new Date(session.date).toLocaleDateString()}\r\n                            </Typography>\r\n                            {session.time && (\r\n                              <Typography variant=\"body2\" sx={{ color: '#ccc' }}>\r\n                                Time: {session.time.slice(0, 5)} {/* Show HH:mm format */}\r\n                              </Typography>\r\n                            )}\r\n                          </>\r\n                        }\r\n                        primaryTypographyProps={{ style: { color: '#fff', fontSize: '1rem', fontWeight: 'bold' } }} // Reduced font size\r\n                        secondaryTypographyProps={{ style: { color: '#ccc', fontSize: '0.9rem' } }} // Reduced font size\r\n                      />\r\n                    </ListItem>\r\n                    <Divider sx={{ backgroundColor: '#555' }} />\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n            ) : (\r\n              <Typography sx={{ color: '#ccc' }}>No upcoming sessions available.</Typography>\r\n            )}\r\n          </SessionListPaper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst SummaryPaper = styled(Paper)({\r\n  padding: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#fff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n  textAlign: 'center',\r\n});\r\n\r\nconst SessionListPaper = styled(Paper)({\r\n  padding: '20px',\r\n  backgroundColor: '#333',\r\n  color: '#fff',\r\n  borderRadius: '8px',\r\n  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n});\r\n\r\nexport default UpcomingSessions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}