{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\AIQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper, CircularProgress } from '@mui/material';\nimport { useStudent } from '../contexts/StudentContext'; // Import useStudent hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuiz = () => {\n  _s();\n  var _currentStudent$perso, _currentStudent$perso2;\n  const {\n    currentStudent\n  } = useStudent(); // Use student context to get student data\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [loading, setLoading] = useState(true); // State for loading spinner\n\n  const studentGrade = `Grade ${currentStudent === null || currentStudent === void 0 ? void 0 : (_currentStudent$perso = currentStudent.personalDetails) === null || _currentStudent$perso === void 0 ? void 0 : _currentStudent$perso.grade}`;\n  const [quizHistory, setQuizHistory] = useState([]);\n\n  // Ensure student data exists before proceeding\n  useEffect(() => {\n    if (currentStudent) {\n      setQuizHistory(currentStudent.quizHistory || []);\n      setLoading(false); // Data has been fetched, stop loading spinner\n    }\n  }, [currentStudent]);\n\n  // Function to handle starting the quiz\n  const handleStartQuiz = () => {\n    // Example questions, in real scenario pull from question bank\n    const exampleQuestions = [{\n      question: \"What is 2 + 2?\",\n      options: ['2', '4', '6'],\n      answer: '4'\n    }, {\n      question: \"What is the capital of France?\",\n      options: ['Paris', 'London', 'Berlin'],\n      answer: 'Paris'\n    }];\n    setQuestions(exampleQuestions);\n    setCurrentQuestionIndex(0);\n    setShowResult(false);\n    setScore(0);\n    setSelectedAnswer('');\n  };\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer('');\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      backgroundColor: '#2c2c2c',\n      color: 'teal',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: 'teal'\n      },\n      children: [\"Quiz for \", currentStudent === null || currentStudent === void 0 ? void 0 : (_currentStudent$perso2 = currentStudent.personalDetails) === null || _currentStudent$perso2 === void 0 ? void 0 : _currentStudent$perso2.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !questions.length && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedSubject,\n          onChange: e => setSelectedSubject(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Math\",\n            sx: {\n              color: 'teal'\n            },\n            children: \"Mathematics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Science\",\n            sx: {\n              color: 'teal'\n            },\n            children: \"Science\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTopic,\n          onChange: e => setSelectedTopic(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Algebra\",\n            sx: {\n              color: 'teal'\n            },\n            children: \"Algebra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Biology\",\n            sx: {\n              color: 'teal'\n            },\n            children: \"Biology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleStartQuiz,\n        sx: {\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), questions.length > 0 && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: handleAnswerChange,\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              sx: {\n                color: 'teal'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 28\n            }, this),\n            label: option,\n            sx: {\n              color: 'teal'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNextQuestion,\n        disabled: !selectedAnswer,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showResult && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'white'\n        },\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'white'\n        },\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => setQuestions([]) // Restart the quiz\n        ,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this), quizHistory.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        width: '100%',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: \"Quiz History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: quizHistory.map((history, index) => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mb: 2,\n            p: 2,\n            backgroundColor: '#2c2c2c',\n            border: '1px solid teal'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'white'\n                },\n                children: [\"Subject: \", history.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Topic: \", history.topic]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Score: \", history.score, \"/\", history.numQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: history.feedback\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        sx: {\n          color: 'teal'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuiz, \"q8AZvS/1N7YShJNveAn72FgPOJo=\", false, function () {\n  return [useStudent];\n});\n_c = AIQuiz;\nexport default AIQuiz;\nvar _c;\n$RefreshReg$(_c, \"AIQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FormControl","MenuItem","Select","RadioGroup","FormControlLabel","Radio","List","ListItem","ListItemText","Paper","CircularProgress","useStudent","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuiz","_s","_currentStudent$perso","_currentStudent$perso2","currentStudent","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","loading","setLoading","studentGrade","personalDetails","grade","quizHistory","setQuizHistory","handleStartQuiz","exampleQuestions","question","options","answer","handleAnswerChange","event","target","value","handleNextQuestion","length","sx","flexGrow","p","backgroundColor","color","minHeight","display","flexDirection","alignItems","justifyContent","children","variant","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","mb","minWidth","onChange","e","displayEmpty","borderColor","disabled","onClick","component","map","option","index","control","label","mt","textAlign","width","maxWidth","history","border","primary","subject","secondary","topic","feedback","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/AIQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box, Typography, Button, FormControl, MenuItem, Select,\r\n  RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText,\r\n  Paper, CircularProgress\r\n} from '@mui/material';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import useStudent hook\r\n\r\nconst AIQuiz = () => {\r\n  const { currentStudent } = useStudent(); // Use student context to get student data\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [loading, setLoading] = useState(true); // State for loading spinner\r\n\r\n  const studentGrade = `Grade ${currentStudent?.personalDetails?.grade}`;\r\n  const [quizHistory, setQuizHistory] = useState([]);\r\n\r\n  // Ensure student data exists before proceeding\r\n  useEffect(() => {\r\n    if (currentStudent) {\r\n      setQuizHistory(currentStudent.quizHistory || []);\r\n      setLoading(false); // Data has been fetched, stop loading spinner\r\n    }\r\n  }, [currentStudent]);\r\n\r\n  // Function to handle starting the quiz\r\n  const handleStartQuiz = () => {\r\n    // Example questions, in real scenario pull from question bank\r\n    const exampleQuestions = [\r\n      { question: \"What is 2 + 2?\", options: ['2', '4', '6'], answer: '4' },\r\n      { question: \"What is the capital of France?\", options: ['Paris', 'London', 'Berlin'], answer: 'Paris' },\r\n    ];\r\n    setQuestions(exampleQuestions);\r\n    setCurrentQuestionIndex(0);\r\n    setShowResult(false);\r\n    setScore(0);\r\n    setSelectedAnswer('');\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        backgroundColor: '#2c2c2c',\r\n        color: 'teal',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      {/* Quiz Section */}\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: 'teal' }}>\r\n        Quiz for {currentStudent?.personalDetails?.name}\r\n      </Typography>\r\n\r\n      {/* Start Quiz UI */}\r\n      {!questions.length && !showResult && (\r\n        <>\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select\r\n              value={selectedSubject}\r\n              onChange={(e) => setSelectedSubject(e.target.value)}\r\n              displayEmpty\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value=\"\" disabled>Select Subject</MenuItem>\r\n              <MenuItem value=\"Math\" sx={{ color: 'teal' }}>Mathematics</MenuItem>\r\n              <MenuItem value=\"Science\" sx={{ color: 'teal' }}>Science</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select\r\n              value={selectedTopic}\r\n              onChange={(e) => setSelectedTopic(e.target.value)}\r\n              displayEmpty\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value=\"\" disabled>Select Topic</MenuItem>\r\n              <MenuItem value=\"Algebra\" sx={{ color: 'teal' }}>Algebra</MenuItem>\r\n              <MenuItem value=\"Biology\" sx={{ color: 'teal' }}>Biology</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleStartQuiz}\r\n            sx={{ color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Start Quiz\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {/* Quiz Questions */}\r\n      {questions.length > 0 && !showResult && (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ color: 'teal' }}>\r\n            {questions[currentQuestionIndex].question}\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup value={selectedAnswer} onChange={handleAnswerChange}>\r\n              {questions[currentQuestionIndex].options.map((option, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  value={option}\r\n                  control={<Radio sx={{ color: 'teal' }} />}\r\n                  label={option}\r\n                  sx={{ color: 'teal' }}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!selectedAnswer}\r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {/* Quiz Result */}\r\n      {showResult && (\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'white' }}>\r\n            Quiz Completed!\r\n          </Typography>\r\n          <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n            Your Score: {score} / {questions.length}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setQuestions([])} // Restart the quiz\r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Restart Quiz\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Quiz History Section */}\r\n      {quizHistory.length > 0 && (\r\n        <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'teal' }}>\r\n            Quiz History\r\n          </Typography>\r\n          <List>\r\n            {quizHistory.map((history, index) => (\r\n              <Paper key={index} sx={{ mb: 2, p: 2, backgroundColor: '#2c2c2c', border: '1px solid teal' }}>\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary={<Typography variant=\"body1\" sx={{ color: 'white' }}>Subject: {history.subject}</Typography>}\r\n                    secondary={\r\n                      <>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Topic: {history.topic}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Score: {history.score}/{history.numQuestions}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>{history.feedback}</Typography>\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Loading Spinner Below Quiz History */}\r\n      {loading && (\r\n        <Box sx={{ mt: 4 }}>\r\n          <CircularProgress sx={{ color: 'teal' }} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}