{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\StudentLogin.js\",\n  _s = $RefreshSig$();\n// src/components/StudentLogin.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useStudent } from '../contexts/StudentContext'; // Import student context\nimport studentData from '../data/studentData'; // Import student data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentLogin = () => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const {\n    setCurrentStudent\n  } = useStudent(); // Use the student context to set the current student\n\n  const handleLogin = () => {\n    // Check if the student ID and password match any entry in studentData\n    const student = studentData.find(student => student.id === studentId && student.password === password);\n    if (student) {\n      // If credentials match, log in the student and set current student context\n      login();\n      setCurrentStudent(student); // Set the logged-in student's data in context\n      navigate('/dashboard'); // Redirect to the dashboard\n    } else {\n      alert('Invalid Student ID or Password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Student ID\",\n      value: studentId,\n      onChange: e => setStudentId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentLogin, \"uB2Zrjid4xN0KyCzNc6X0xSL2mU=\", false, function () {\n  return [useNavigate, useAuth, useStudent];\n});\n_c = StudentLogin;\nexport default StudentLogin;\nvar _c;\n$RefreshReg$(_c, \"StudentLogin\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","useStudent","studentData","jsxDEV","_jsxDEV","StudentLogin","_s","studentId","setStudentId","password","setPassword","navigate","login","setCurrentStudent","handleLogin","student","find","id","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/StudentLogin.js"],"sourcesContent":["// src/components/StudentLogin.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import student context\r\nimport studentData from '../data/studentData'; // Import student data\r\n\r\nconst StudentLogin = () => {\r\n  const [studentId, setStudentId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n  const { setCurrentStudent } = useStudent(); // Use the student context to set the current student\r\n\r\n  const handleLogin = () => {\r\n    // Check if the student ID and password match any entry in studentData\r\n    const student = studentData.find(\r\n      (student) => student.id === studentId && student.password === password\r\n    );\r\n\r\n    if (student) {\r\n      // If credentials match, log in the student and set current student context\r\n      login();\r\n      setCurrentStudent(student); // Set the logged-in student's data in context\r\n      navigate('/dashboard'); // Redirect to the dashboard\r\n    } else {\r\n      alert('Invalid Student ID or Password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Student ID\"\r\n        value={studentId}\r\n        onChange={(e) => setStudentId(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentLogin;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,UAAU,QAAQ,4BAA4B,CAAC,CAAC;AACzD,OAAOC,WAAW,MAAM,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAM,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC3B,MAAM;IAAEa;EAAkB,CAAC,GAAGZ,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE5C,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,OAAO,GAAGb,WAAW,CAACc,IAAI,CAC7BD,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKV,SAAS,IAAIQ,OAAO,CAACN,QAAQ,KAAKA,QAChE,CAAC;IAED,IAAIM,OAAO,EAAE;MACX;MACAH,KAAK,CAAC,CAAC;MACPC,iBAAiB,CAACE,OAAO,CAAC,CAAC,CAAC;MAC5BJ,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLO,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MACEgB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,YAAY;MACxBC,KAAK,EAAEf,SAAU;MACjBgB,QAAQ,EAAGC,CAAC,IAAKhB,YAAY,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACFzB,OAAA;MACEgB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEb,QAAS;MAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFzB,OAAA;MAAQ0B,OAAO,EAAEhB,WAAY;MAAAK,QAAA,EAAC;IAAK;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,YAAY;EAAA,QAGCN,WAAW,EACVC,OAAO,EACKC,UAAU;AAAA;AAAA8B,EAAA,GALpC1B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}