{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\AIQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper, CircularProgress } from '@mui/material';\nimport quizData from '../data/quizQuestions.json';\nimport { useStudent } from '../contexts/StudentContext'; // Import useStudent hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuiz = () => {\n  _s();\n  var _currentStudent$perso, _currentStudent$perso2;\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [availableSubjects, setAvailableSubjects] = useState([]);\n  const [availableTopics, setAvailableTopics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    currentStudent\n  } = useStudent(); // Use StudentContext to get current student\n  const studentGrade = `Grade ${currentStudent === null || currentStudent === void 0 ? void 0 : (_currentStudent$perso = currentStudent.personalDetails) === null || _currentStudent$perso === void 0 ? void 0 : _currentStudent$perso.grade}`;\n  const quizHistory = (currentStudent === null || currentStudent === void 0 ? void 0 : currentStudent.quizHistory) || [];\n  useEffect(() => {\n    if (currentStudent) {\n      // Set available subjects based on the student's grade\n      const subjects = Object.keys(quizData).filter(subject => quizData[subject][studentGrade] !== undefined);\n      setAvailableSubjects(subjects);\n      setLoading(false); // Stop loading when data is ready\n    }\n  }, [currentStudent, studentGrade]);\n  useEffect(() => {\n    if (selectedSubject) {\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\n      setAvailableTopics(topics);\n    }\n  }, [selectedSubject, studentGrade]);\n  const handleStartQuiz = () => {\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n    setShowResult(false);\n    setScore(0);\n    setSelectedAnswer('');\n  };\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer('');\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n      saveQuizHistory();\n    }\n  };\n  const saveQuizHistory = () => {\n    const feedback = getFeedback(score, questions.length);\n    const newHistory = {\n      date: new Date().toISOString().split('T')[0],\n      subject: selectedSubject,\n      topic: selectedTopic,\n      numQuestions: questions.length,\n      score: score,\n      feedback: feedback\n    };\n\n    // Add new quiz result to quizHistory in student context\n    currentStudent.quizHistory = [...quizHistory, newHistory];\n  };\n  const getFeedback = (score, total) => {\n    const percentage = score / total * 100;\n    if (percentage === 100) {\n      return \"Outstanding! You got everything correct!\";\n    } else if (percentage >= 80) {\n      return \"Great job! You're doing really well!\";\n    } else if (percentage >= 50) {\n      return \"Good effort! Keep practicing!\";\n    } else {\n      return \"Don't worry, keep trying and you'll improve!\";\n    }\n  };\n  const handleRestartQuiz = () => {\n    setQuestions([]);\n    setSelectedSubject('');\n    setSelectedTopic('');\n    setNumQuestions(5);\n    setShowResult(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      backgroundColor: '#2c2c2c',\n      color: 'teal',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: 'teal'\n      },\n      children: [\"Quiz for \", currentStudent === null || currentStudent === void 0 ? void 0 : (_currentStudent$perso2 = currentStudent.personalDetails) === null || _currentStudent$perso2 === void 0 ? void 0 : _currentStudent$perso2.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), !questions.length && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedSubject,\n          onChange: e => setSelectedSubject(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), availableSubjects.map(subject => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: subject,\n            sx: {\n              color: 'teal'\n            },\n            children: subject\n          }, subject, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), selectedSubject && /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTopic,\n          onChange: e => setSelectedTopic(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), availableTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: topic,\n            sx: {\n              color: 'teal'\n            },\n            children: topic\n          }, topic, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: numQuestions,\n          onChange: e => setNumQuestions(e.target.value),\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 5,\n            children: \"5 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 10,\n            children: \"10 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleStartQuiz,\n        disabled: !selectedTopic,\n        sx: {\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), questions.length > 0 && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: handleAnswerChange,\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              sx: {\n                color: 'teal'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 28\n            }, this),\n            label: option,\n            sx: {\n              color: 'teal'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNextQuestion,\n        disabled: !selectedAnswer,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showResult && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'white'\n        },\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'white'\n        },\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 1,\n          color: 'teal'\n        },\n        children: getFeedback(score, questions.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleRestartQuiz,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), quizHistory.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        width: '100%',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: \"Quiz History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: quizHistory.map((history, index) => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mb: 2,\n            p: 2,\n            backgroundColor: '#2c2c2c',\n            border: '1px solid teal'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'white'\n                },\n                children: [\"Subject: \", history.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Topic: \", history.topic]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Score: \", history.score, \"/\", history.numQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: history.feedback\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        sx: {\n          color: 'teal'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuiz, \"ZV3K4Dr3U+G0UnHuty0fyqOW0hA=\", false, function () {\n  return [useStudent];\n});\n_c = AIQuiz;\nexport default AIQuiz;\nvar _c;\n$RefreshReg$(_c, \"AIQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FormControl","MenuItem","Select","RadioGroup","FormControlLabel","Radio","List","ListItem","ListItemText","Paper","CircularProgress","quizData","useStudent","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuiz","_s","_currentStudent$perso","_currentStudent$perso2","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","availableSubjects","setAvailableSubjects","availableTopics","setAvailableTopics","loading","setLoading","currentStudent","studentGrade","personalDetails","grade","quizHistory","subjects","Object","keys","filter","subject","undefined","topics","handleStartQuiz","selectedQuestions","shuffledQuestions","sort","Math","random","slice","handleAnswerChange","event","target","value","handleNextQuestion","answer","length","saveQuizHistory","feedback","getFeedback","newHistory","date","Date","toISOString","split","topic","total","percentage","handleRestartQuiz","sx","flexGrow","p","backgroundColor","color","minHeight","display","flexDirection","alignItems","justifyContent","children","variant","gutterBottom","name","fileName","_jsxFileName","lineNumber","columnNumber","mb","minWidth","onChange","e","displayEmpty","borderColor","disabled","map","onClick","question","component","options","option","index","control","label","mt","textAlign","width","maxWidth","history","border","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/AIQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper, CircularProgress } from '@mui/material';\r\nimport quizData from '../data/quizQuestions.json';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import useStudent hook\r\n\r\nconst AIQuiz = () => {\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [availableSubjects, setAvailableSubjects] = useState([]);\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const { currentStudent } = useStudent(); // Use StudentContext to get current student\r\n  const studentGrade = `Grade ${currentStudent?.personalDetails?.grade}`;\r\n  const quizHistory = currentStudent?.quizHistory || [];\r\n\r\n  useEffect(() => {\r\n    if (currentStudent) {\r\n      // Set available subjects based on the student's grade\r\n      const subjects = Object.keys(quizData).filter(subject =>\r\n        quizData[subject][studentGrade] !== undefined\r\n      );\r\n      setAvailableSubjects(subjects);\r\n      setLoading(false); // Stop loading when data is ready\r\n    }\r\n  }, [currentStudent, studentGrade]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubject) {\r\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\r\n      setAvailableTopics(topics);\r\n    }\r\n  }, [selectedSubject, studentGrade]);\r\n\r\n  const handleStartQuiz = () => {\r\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\r\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\r\n    setQuestions(shuffledQuestions);\r\n    setCurrentQuestionIndex(0);\r\n    setShowResult(false);\r\n    setScore(0);\r\n    setSelectedAnswer('');\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResult(true);\r\n      saveQuizHistory();\r\n    }\r\n  };\r\n\r\n  const saveQuizHistory = () => {\r\n    const feedback = getFeedback(score, questions.length);\r\n    const newHistory = {\r\n      date: new Date().toISOString().split('T')[0],\r\n      subject: selectedSubject,\r\n      topic: selectedTopic,\r\n      numQuestions: questions.length,\r\n      score: score,\r\n      feedback: feedback\r\n    };\r\n\r\n    // Add new quiz result to quizHistory in student context\r\n    currentStudent.quizHistory = [...quizHistory, newHistory];\r\n  };\r\n\r\n  const getFeedback = (score, total) => {\r\n    const percentage = (score / total) * 100;\r\n    if (percentage === 100) {\r\n      return \"Outstanding! You got everything correct!\";\r\n    } else if (percentage >= 80) {\r\n      return \"Great job! You're doing really well!\";\r\n    } else if (percentage >= 50) {\r\n      return \"Good effort! Keep practicing!\";\r\n    } else {\r\n      return \"Don't worry, keep trying and you'll improve!\";\r\n    }\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setQuestions([]);\r\n    setSelectedSubject('');\r\n    setSelectedTopic('');\r\n    setNumQuestions(5);\r\n    setShowResult(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        backgroundColor: '#2c2c2c',\r\n        color: 'teal',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: 'teal' }}>\r\n        Quiz for {currentStudent?.personalDetails?.name}\r\n      </Typography>\r\n\r\n      {!questions.length && !showResult && (\r\n        <>\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={selectedSubject} \r\n              onChange={(e) => setSelectedSubject(e.target.value)} \r\n              displayEmpty\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value=\"\" disabled>Select Subject</MenuItem>\r\n              {availableSubjects.map((subject) => (\r\n                <MenuItem key={subject} value={subject} sx={{ color: 'teal' }}>{subject}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {selectedSubject && (\r\n            <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n              <Select \r\n                value={selectedTopic} \r\n                onChange={(e) => setSelectedTopic(e.target.value)} \r\n                displayEmpty\r\n                sx={{ color: 'white', borderColor: 'teal' }}\r\n              >\r\n                <MenuItem value=\"\" disabled>Select Topic</MenuItem>\r\n                {availableTopics.map((topic) => (\r\n                  <MenuItem key={topic} value={topic} sx={{ color: 'teal' }}>{topic}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={numQuestions} \r\n              onChange={(e) => setNumQuestions(e.target.value)}\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value={5}>5 Questions</MenuItem>\r\n              <MenuItem value={10}>10 Questions</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleStartQuiz} \r\n            disabled={!selectedTopic}\r\n            sx={{ color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Start Quiz\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {questions.length > 0 && !showResult && (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ color: 'teal' }}>\r\n            {questions[currentQuestionIndex].question}\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup value={selectedAnswer} onChange={handleAnswerChange}>\r\n              {questions[currentQuestionIndex].options.map((option, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  value={option}\r\n                  control={<Radio sx={{ color: 'teal' }} />}\r\n                  label={option}\r\n                  sx={{ color: 'teal' }}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!selectedAnswer}\r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {showResult && (\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'white' }}>\r\n            Quiz Completed!\r\n          </Typography>\r\n          <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n            Your Score: {score} / {questions.length}\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ mt: 1, color: 'teal' }}>\r\n            {getFeedback(score, questions.length)}\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleRestartQuiz} \r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Restart Quiz\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {quizHistory.length > 0 && (\r\n        <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'teal' }}>\r\n            Quiz History\r\n          </Typography>\r\n          <List>\r\n            {quizHistory.map((history, index) => (\r\n              <Paper key={index} sx={{ mb: 2, p: 2, backgroundColor: '#2c2c2c', border: '1px solid teal' }}>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary={<Typography variant=\"body1\" sx={{ color: 'white' }}>Subject: {history.subject}</Typography>}\r\n                    secondary={\r\n                      <>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Topic: {history.topic}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Score: {history.score}/{history.numQuestions}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>{history.feedback}</Typography>\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Loading spinner below quiz history */}\r\n      {loading && (\r\n        <Box sx={{ mt: 4 }}>\r\n          <CircularProgress sx={{ color: 'teal' }} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}