{"ast":null,"code":"// models/Student.js\nconst mongoose = require('mongoose');\nconst bcrypt = require('bcryptjs');\nconst studentSchema = new mongoose.Schema({\n  personalDetails: {\n    id: {\n      type: Number,\n      required: true,\n      unique: true\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    age: {\n      type: Number,\n      required: true\n    },\n    grade: {\n      type: Number,\n      required: true\n    },\n    contact: {\n      email: {\n        type: String,\n        required: true,\n        unique: true\n      },\n      phone: {\n        type: String,\n        required: true\n      },\n      address: {\n        type: String,\n        required: true\n      }\n    }\n  },\n  paymentInformation: Array,\n  tutoringHistory: Array,\n  quizHistory: Array,\n  password: {\n    type: String,\n    required: true\n  } // Store hashed passwords\n});\n\n// Hash password before saving\nstudentSchema.pre('save', async function (next) {\n  if (!this.isModified('password')) return next();\n  this.password = await bcrypt.hash(this.password, 10);\n  next();\n});\nmodule.exports = mongoose.model('Student', studentSchema);","map":{"version":3,"names":["mongoose","require","bcrypt","studentSchema","Schema","personalDetails","id","type","Number","required","unique","name","String","age","grade","contact","email","phone","address","paymentInformation","Array","tutoringHistory","quizHistory","password","pre","next","isModified","hash","module","exports","model"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/data/student.js"],"sourcesContent":["// models/Student.js\r\nconst mongoose = require('mongoose');\r\nconst bcrypt = require('bcryptjs');\r\n\r\nconst studentSchema = new mongoose.Schema({\r\n  personalDetails: {\r\n    id: { type: Number, required: true, unique: true },\r\n    name: { type: String, required: true },\r\n    age: { type: Number, required: true },\r\n    grade: { type: Number, required: true },\r\n    contact: {\r\n      email: { type: String, required: true, unique: true },\r\n      phone: { type: String, required: true },\r\n      address: { type: String, required: true },\r\n    },\r\n  },\r\n  paymentInformation: Array,\r\n  tutoringHistory: Array,\r\n  quizHistory: Array,\r\n  password: { type: String, required: true }, // Store hashed passwords\r\n});\r\n\r\n// Hash password before saving\r\nstudentSchema.pre('save', async function (next) {\r\n  if (!this.isModified('password')) return next();\r\n  this.password = await bcrypt.hash(this.password, 10);\r\n  next();\r\n});\r\n\r\nmodule.exports = mongoose.model('Student', studentSchema);\r\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAU,CAAC;AAElC,MAAME,aAAa,GAAG,IAAIH,QAAQ,CAACI,MAAM,CAAC;EACxCC,eAAe,EAAE;IACfC,EAAE,EAAE;MAAEC,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAC;IAClDC,IAAI,EAAE;MAAEJ,IAAI,EAAEK,MAAM;MAAEH,QAAQ,EAAE;IAAK,CAAC;IACtCI,GAAG,EAAE;MAAEN,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACrCK,KAAK,EAAE;MAAEP,IAAI,EAAEC,MAAM;MAAEC,QAAQ,EAAE;IAAK,CAAC;IACvCM,OAAO,EAAE;MACPC,KAAK,EAAE;QAAET,IAAI,EAAEK,MAAM;QAAEH,QAAQ,EAAE,IAAI;QAAEC,MAAM,EAAE;MAAK,CAAC;MACrDO,KAAK,EAAE;QAAEV,IAAI,EAAEK,MAAM;QAAEH,QAAQ,EAAE;MAAK,CAAC;MACvCS,OAAO,EAAE;QAAEX,IAAI,EAAEK,MAAM;QAAEH,QAAQ,EAAE;MAAK;IAC1C;EACF,CAAC;EACDU,kBAAkB,EAAEC,KAAK;EACzBC,eAAe,EAAED,KAAK;EACtBE,WAAW,EAAEF,KAAK;EAClBG,QAAQ,EAAE;IAAEhB,IAAI,EAAEK,MAAM;IAAEH,QAAQ,EAAE;EAAK,CAAC,CAAE;AAC9C,CAAC,CAAC;;AAEF;AACAN,aAAa,CAACqB,GAAG,CAAC,MAAM,EAAE,gBAAgBC,IAAI,EAAE;EAC9C,IAAI,CAAC,IAAI,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE,OAAOD,IAAI,CAAC,CAAC;EAC/C,IAAI,CAACF,QAAQ,GAAG,MAAMrB,MAAM,CAACyB,IAAI,CAAC,IAAI,CAACJ,QAAQ,EAAE,EAAE,CAAC;EACpDE,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAEFG,MAAM,CAACC,OAAO,GAAG7B,QAAQ,CAAC8B,KAAK,CAAC,SAAS,EAAE3B,aAAa,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}