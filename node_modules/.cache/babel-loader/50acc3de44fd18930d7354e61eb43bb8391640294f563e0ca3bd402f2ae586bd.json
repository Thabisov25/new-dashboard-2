{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\contexts\\\\StudentContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/StudentContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentContext = /*#__PURE__*/createContext();\nexport const useStudent = () => {\n  _s();\n  return useContext(StudentContext);\n};\n_s(useStudent, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const StudentProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentStudent, setCurrentStudent] = useState(null);\n  useEffect(() => {\n    // Fetch or set the current student from your authentication logic\n    // This is just an example; replace it with your actual logic\n    const fetchCurrentStudent = () => {\n      const studentId = 'S1001'; // Replace with dynamic logic\n      setCurrentStudent({\n        id: studentId\n      });\n    };\n    fetchCurrentStudent();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(StudentContext.Provider, {\n    value: {\n      currentStudent\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s2(StudentProvider, \"6LdDmsrWSBYRetV5BbXzLMqWadw=\");\n_c = StudentProvider;\nvar _c;\n$RefreshReg$(_c, \"StudentProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","StudentContext","useStudent","_s","StudentProvider","children","_s2","currentStudent","setCurrentStudent","fetchCurrentStudent","studentId","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/contexts/StudentContext.js"],"sourcesContent":["// src/contexts/StudentContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst StudentContext = createContext();\r\n\r\nexport const useStudent = () => useContext(StudentContext);\r\n\r\nexport const StudentProvider = ({ children }) => {\r\n  const [currentStudent, setCurrentStudent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch or set the current student from your authentication logic\r\n    // This is just an example; replace it with your actual logic\r\n    const fetchCurrentStudent = () => {\r\n      const studentId = 'S1001'; // Replace with dynamic logic\r\n      setCurrentStudent({ id: studentId });\r\n    };\r\n\r\n    fetchCurrentStudent();\r\n  }, []);\r\n\r\n  return (\r\n    <StudentContext.Provider value={{ currentStudent }}>\r\n      {children}\r\n    </StudentContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,cAAc,gBAAGN,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMO,UAAU,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,cAAc,CAAC;AAAA;AAACE,EAAA,CAA9CD,UAAU;AAEvB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1DC,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,SAAS,GAAG,OAAO,CAAC,CAAC;MAC3BF,iBAAiB,CAAC;QAAEG,EAAE,EAAED;MAAU,CAAC,CAAC;IACtC,CAAC;IAEDD,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAACC,cAAc,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEN;IAAe,CAAE;IAAAF,QAAA,EAChDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACX,GAAA,CAnBWF,eAAe;AAAAc,EAAA,GAAfd,eAAe;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}