{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\PasswordReset.js\",\n  _s = $RefreshSig$();\n// src/components/PasswordReset.js\nimport React, { useState } from 'react';\nimport { Box, Button, TextField, Typography, Paper } from '@mui/material';\nimport studentData from '../data/studentData'; // Importing student data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [dateOfBirth, setDateOfBirth] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = () => {\n    // Find the student by ID, date of birth, and phone number\n    const student = studentData.find(student => student.id === studentId && student.dateOfBirth === dateOfBirth && student.phoneNumber === phoneNumber);\n    if (!student) {\n      setMessage('Student ID, Date of Birth, or Phone Number is incorrect.');\n      return;\n    }\n\n    // Check if the new password matches the confirmation\n    if (newPassword !== confirmPassword) {\n      setMessage('Passwords do not match.');\n      return;\n    }\n\n    // Update the password\n    student.password = newPassword;\n    setMessage('Password updated successfully.');\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        padding: '30px',\n        width: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        sx: {\n          marginBottom: '20px'\n        },\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Student ID\",\n        fullWidth: true,\n        value: studentId,\n        onChange: e => setStudentId(e.target.value),\n        sx: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date of Birth\",\n        type: \"date\",\n        fullWidth: true,\n        value: dateOfBirth,\n        onChange: e => setDateOfBirth(e.target.value),\n        InputLabelProps: {\n          shrink: true\n        },\n        sx: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Phone Number\",\n        fullWidth: true,\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        sx: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"New Password\",\n        type: \"password\",\n        fullWidth: true,\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        sx: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Confirm New Password\",\n        type: \"password\",\n        fullWidth: true,\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        sx: {\n          marginBottom: '15px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleResetPassword,\n        fullWidth: true,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          marginTop: '15px',\n          color: message.includes('successfully') ? 'green' : 'red'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"yZZD1CA25YG3+U7ozwlBlS3bd38=\");\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","Typography","Paper","studentData","jsxDEV","_jsxDEV","PasswordReset","_s","studentId","setStudentId","dateOfBirth","setDateOfBirth","phoneNumber","setPhoneNumber","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleResetPassword","student","find","id","password","display","justifyContent","alignItems","height","children","sx","padding","width","variant","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","type","InputLabelProps","shrink","color","onClick","marginTop","includes","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/PasswordReset.js"],"sourcesContent":["// src/components/PasswordReset.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Button, TextField, Typography, Paper } from '@mui/material';\r\nimport studentData from '../data/studentData'; // Importing student data\r\n\r\nconst PasswordReset = () => {\r\n  const [studentId, setStudentId] = useState('');\r\n  const [dateOfBirth, setDateOfBirth] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleResetPassword = () => {\r\n    // Find the student by ID, date of birth, and phone number\r\n    const student = studentData.find(\r\n      (student) => \r\n        student.id === studentId && \r\n        student.dateOfBirth === dateOfBirth &&\r\n        student.phoneNumber === phoneNumber\r\n    );\r\n\r\n    if (!student) {\r\n      setMessage('Student ID, Date of Birth, or Phone Number is incorrect.');\r\n      return;\r\n    }\r\n\r\n    // Check if the new password matches the confirmation\r\n    if (newPassword !== confirmPassword) {\r\n      setMessage('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    // Update the password\r\n    student.password = newPassword;\r\n    setMessage('Password updated successfully.');\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n      <Paper sx={{ padding: '30px', width: '400px' }}>\r\n        <Typography variant=\"h5\" sx={{ marginBottom: '20px' }}>Reset Password</Typography>\r\n        <TextField\r\n          label=\"Student ID\"\r\n          fullWidth\r\n          value={studentId}\r\n          onChange={(e) => setStudentId(e.target.value)}\r\n          sx={{ marginBottom: '15px' }}\r\n        />\r\n        <TextField\r\n          label=\"Date of Birth\"\r\n          type=\"date\"\r\n          fullWidth\r\n          value={dateOfBirth}\r\n          onChange={(e) => setDateOfBirth(e.target.value)}\r\n          InputLabelProps={{ shrink: true }}\r\n          sx={{ marginBottom: '15px' }}\r\n        />\r\n        <TextField\r\n          label=\"Phone Number\"\r\n          fullWidth\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          sx={{ marginBottom: '15px' }}\r\n        />\r\n        <TextField\r\n          label=\"New Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          sx={{ marginBottom: '15px' }}\r\n        />\r\n        <TextField\r\n          label=\"Confirm New Password\"\r\n          type=\"password\"\r\n          fullWidth\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          sx={{ marginBottom: '15px' }}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleResetPassword} fullWidth>\r\n          Reset Password\r\n        </Button>\r\n        {message && <Typography sx={{ marginTop: '15px', color: message.includes('successfully') ? 'green' : 'red' }}>{message}</Typography>}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}