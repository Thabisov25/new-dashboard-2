{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Box,Typography,Button,FormControl,MenuItem,Select,RadioGroup,FormControlLabel,Radio,List,ListItem,ListItemText,Paper,Dialog,DialogTitle,DialogContent,DialogContentText,DialogActions}from'@mui/material';import quizData from'../data/quizQuestions.json';import{useStudent}from'../contexts/StudentContext';// Import the custom hook\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const logo=process.env.PUBLIC_URL+'/logo.png';// Reference to the logo\nconst AIQuiz=()=>{const{currentStudent}=useStudent();// Get the current student from context\nconst[student,setStudent]=useState(null);// State for student data\nconst[error,setError]=useState(null);// State for error handling\nconst[selectedSubject,setSelectedSubject]=useState('');const[selectedTopic,setSelectedTopic]=useState('');const[numQuestions,setNumQuestions]=useState(5);const[questions,setQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState('');const[score,setScore]=useState(0);const[showResult,setShowResult]=useState(false);const[availableSubjects,setAvailableSubjects]=useState([]);const[availableTopics,setAvailableTopics]=useState([]);const[quizHistory,setQuizHistory]=useState([]);const[showFirstQuizNotification,setShowFirstQuizNotification]=useState(false);// New state for first quiz notification\nconst[showHistory,setShowHistory]=useState(true);// For hiding/showing history\nconst[openPopup,setOpenPopup]=useState(false);// For showing popup\nconst[selectedHistoryItem,setSelectedHistoryItem]=useState(null);// To store the selected quiz item\nuseEffect(()=>{const loadStudentData=async()=>{if(currentStudent&&currentStudent.id){try{const data=await import(`../data/students/${currentStudent.id}.js`);setStudent(data.default);// Load quiz history from localStorage\nconst storedHistory=JSON.parse(localStorage.getItem('quizHistory'))||[];setQuizHistory(storedHistory);// Show notification if no quiz history exists (first quiz)\nif(storedHistory.length===0){setShowFirstQuizNotification(true);}}catch(err){console.error('Error loading student data:',err);setError('Failed to load student data.');}}else{setError('No current student data available.');}};loadStudentData();},[currentStudent]);const studentGrade=student?`Grade ${student.personalDetails.grade}`:'';useEffect(()=>{if(studentGrade){const subjects=Object.keys(quizData).filter(subject=>quizData[subject][studentGrade]!==undefined);setAvailableSubjects(subjects);}},[studentGrade]);useEffect(()=>{if(selectedSubject&&studentGrade){const topics=Object.keys(quizData[selectedSubject][studentGrade]);setAvailableTopics(topics);}},[selectedSubject,studentGrade]);const handleStartQuiz=()=>{const selectedQuestions=quizData[selectedSubject][studentGrade][selectedTopic];const shuffledQuestions=selectedQuestions.sort(()=>0.5-Math.random()).slice(0,numQuestions);setQuestions(shuffledQuestions);setCurrentQuestionIndex(0);setShowResult(false);setScore(0);setSelectedAnswer('');setShowFirstQuizNotification(false);// Hide notification after starting the quiz\nsetShowHistory(false);// Hide quiz history when quiz starts\n};const handleAnswerChange=event=>{setSelectedAnswer(event.target.value);};const handleNextQuestion=()=>{if(selectedAnswer===questions[currentQuestionIndex].answer){setScore(score+1);}setSelectedAnswer('');if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);}else{setShowResult(true);saveQuizHistory();setShowHistory(true);// Show quiz history when quiz is finished\n}};const saveQuizHistory=()=>{const feedback=getFeedback(score,questions.length);const newHistory={date:new Date().toISOString().split('T')[0],subject:selectedSubject,topic:selectedTopic,numQuestions:questions.length,score:score,feedback:feedback};// Save quiz history to localStorage\nconst updatedHistory=[newHistory,...quizHistory];// latest first\nsetQuizHistory(updatedHistory);localStorage.setItem('quizHistory',JSON.stringify(updatedHistory));};const getFeedback=(score,total)=>{const percentage=score/total*100;if(percentage===100){return\"Outstanding! You got everything correct!\";}else if(percentage>=80){return\"Great job! You're doing really well!\";}else if(percentage>=50){return\"Good effort! Keep practicing!\";}else{return\"Don't worry, keep trying and you'll improve!\";}};const handleRestartQuiz=()=>{setQuestions([]);setSelectedSubject('');setSelectedTopic('');setNumQuestions(5);setShowResult(false);};const handleClickHistoryItem=historyItem=>{setSelectedHistoryItem(historyItem);setOpenPopup(true);};const handleClosePopup=()=>{setOpenPopup(false);setSelectedHistoryItem(null);};if(error){return/*#__PURE__*/_jsx(Typography,{sx:{color:'red',textAlign:'center',marginTop:'20px'},children:error});}if(!student){return/*#__PURE__*/_jsx(Typography,{sx:{color:'#ffffff',textAlign:'center',marginTop:'20px'},children:\"Loading...\"});}return/*#__PURE__*/_jsxs(Box,{sx:{flexGrow:1,p:3,minHeight:'100vh',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',backgroundColor:'#2c2c2c',backgroundImage:`url(${logo})`,backgroundSize:'cover',backgroundPosition:'center',backgroundAttachment:'fixed',backgroundBlendMode:'overlay',filter:'blur(0px)',position:'relative'},children:[/*#__PURE__*/_jsx(Box,{sx:{position:'absolute',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(44, 44, 44, 0.8)',zIndex:-1}}),/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",gutterBottom:true,sx:{color:'teal'},children:[\"Quiz for \",student.personalDetails.name]}),showFirstQuizNotification&&/*#__PURE__*/_jsx(Typography,{sx:{color:'orange',mb:2},children:\"Your quiz history will only be saved on this device. You will not be able to access it from other devices.\"}),!questions.length&&!showResult&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FormControl,{sx:{mb:2,minWidth:120},children:/*#__PURE__*/_jsxs(Select,{value:selectedSubject,onChange:e=>setSelectedSubject(e.target.value),displayEmpty:true,sx:{color:'white',borderColor:'teal'},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",disabled:true,children:\"Select Subject\"}),availableSubjects.map(subject=>/*#__PURE__*/_jsx(MenuItem,{value:subject,sx:{color:'teal'},children:subject},subject))]})}),selectedSubject&&/*#__PURE__*/_jsx(FormControl,{sx:{mb:2,minWidth:120},children:/*#__PURE__*/_jsxs(Select,{value:selectedTopic,onChange:e=>setSelectedTopic(e.target.value),displayEmpty:true,sx:{color:'white',borderColor:'teal'},children:[/*#__PURE__*/_jsx(MenuItem,{value:\"\",disabled:true,children:\"Select Topic\"}),availableTopics.map(topic=>/*#__PURE__*/_jsx(MenuItem,{value:topic,sx:{color:'teal'},children:topic},topic))]})}),/*#__PURE__*/_jsx(FormControl,{sx:{mb:2,minWidth:120},children:/*#__PURE__*/_jsxs(Select,{value:numQuestions,onChange:e=>setNumQuestions(e.target.value),sx:{color:'white',borderColor:'teal'},children:[/*#__PURE__*/_jsx(MenuItem,{value:5,children:\"5 Questions\"}),/*#__PURE__*/_jsx(MenuItem,{value:10,children:\"10 Questions\"})]})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleStartQuiz,disabled:!selectedTopic,sx:{color:'white',backgroundColor:'teal','&:hover':{backgroundColor:'#008080'}},children:\"Start Quiz\"})]}),questions.length>0&&!showResult&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,sx:{color:'teal'},children:questions[currentQuestionIndex].question}),/*#__PURE__*/_jsx(FormControl,{component:\"fieldset\",children:/*#__PURE__*/_jsx(RadioGroup,{value:selectedAnswer,onChange:handleAnswerChange,children:questions[currentQuestionIndex].options.map((option,index)=>/*#__PURE__*/_jsx(FormControlLabel,{value:option,control:/*#__PURE__*/_jsx(Radio,{sx:{color:'teal'}}),label:option,sx:{color:'teal'}},index))})}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleNextQuestion,disabled:!selectedAnswer,sx:{mt:2,color:'white',backgroundColor:'teal','&:hover':{backgroundColor:'#008080'}},children:currentQuestionIndex<questions.length-1?'Next':'Finish'})]}),showResult&&/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{color:'white'},children:\"Quiz Completed!\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",sx:{color:'white'},children:[\"Your Score: \",score,\" / \",questions.length]}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:1,color:'teal'},children:getFeedback(score,questions.length)}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleRestartQuiz,sx:{mt:2,color:'white',backgroundColor:'teal','&:hover':{backgroundColor:'#008080'}},children:\"Restart Quiz\"})]}),quizHistory.length>0&&showHistory&&/*#__PURE__*/// Only show if not taking a quiz\n_jsxs(Box,{sx:{mt:4,width:'100%',maxWidth:600},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h5\",gutterBottom:true,sx:{color:'teal'},children:\"Quiz History\"}),/*#__PURE__*/_jsx(List,{children:quizHistory.map((history,index)=>/*#__PURE__*/_jsx(Paper,{sx:{mb:2,p:2,backgroundColor:'#2c2c2c',border:'1px solid teal'},children:/*#__PURE__*/_jsx(ListItem,{button:true,onClick:()=>handleClickHistoryItem(history),children:/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",sx:{color:'white'},children:[\"Subject: \",history.subject]}),secondary:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'white'},children:[\"Topic: \",history.topic]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",sx:{color:'white'},children:[\"Score: \",history.score,\"/\",history.numQuestions]}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:{color:'white'},children:history.feedback})]})})})},index))})]}),/*#__PURE__*/_jsxs(Dialog,{open:openPopup,onClose:handleClosePopup,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Quiz Details\"}),/*#__PURE__*/_jsx(DialogContent,{children:selectedHistoryItem&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Subject: \",selectedHistoryItem.subject]}),/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Topic: \",selectedHistoryItem.topic]}),/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Score: \",selectedHistoryItem.score,\"/\",selectedHistoryItem.numQuestions]}),/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Feedback: \",selectedHistoryItem.feedback]})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:handleClosePopup,color:\"primary\",children:\"Close\"})})]})]});};export default AIQuiz;","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FormControl","MenuItem","Select","RadioGroup","FormControlLabel","Radio","List","ListItem","ListItemText","Paper","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","quizData","useStudent","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","logo","process","env","PUBLIC_URL","AIQuiz","currentStudent","student","setStudent","error","setError","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","availableSubjects","setAvailableSubjects","availableTopics","setAvailableTopics","quizHistory","setQuizHistory","showFirstQuizNotification","setShowFirstQuizNotification","showHistory","setShowHistory","openPopup","setOpenPopup","selectedHistoryItem","setSelectedHistoryItem","loadStudentData","id","data","default","storedHistory","JSON","parse","localStorage","getItem","length","err","console","studentGrade","personalDetails","grade","subjects","Object","keys","filter","subject","undefined","topics","handleStartQuiz","selectedQuestions","shuffledQuestions","sort","Math","random","slice","handleAnswerChange","event","target","value","handleNextQuestion","answer","saveQuizHistory","feedback","getFeedback","newHistory","date","Date","toISOString","split","topic","updatedHistory","setItem","stringify","total","percentage","handleRestartQuiz","handleClickHistoryItem","historyItem","handleClosePopup","sx","color","textAlign","marginTop","children","flexGrow","p","minHeight","display","flexDirection","alignItems","justifyContent","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","backgroundBlendMode","position","top","left","right","bottom","zIndex","variant","gutterBottom","name","mb","minWidth","onChange","e","displayEmpty","borderColor","disabled","map","onClick","question","component","options","option","index","control","label","mt","width","maxWidth","history","border","button","primary","secondary","open","onClose"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/components/AIQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@mui/material';\r\nimport quizData from '../data/quizQuestions.json';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\r\n\r\nconst logo = process.env.PUBLIC_URL + '/logo.png'; // Reference to the logo\r\n\r\nconst AIQuiz = () => {\r\n  const { currentStudent } = useStudent(); // Get the current student from context\r\n  const [student, setStudent] = useState(null); // State for student data\r\n  const [error, setError] = useState(null); // State for error handling\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [availableSubjects, setAvailableSubjects] = useState([]);\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  const [quizHistory, setQuizHistory] = useState([]);\r\n  const [showFirstQuizNotification, setShowFirstQuizNotification] = useState(false); // New state for first quiz notification\r\n  const [showHistory, setShowHistory] = useState(true); // For hiding/showing history\r\n  const [openPopup, setOpenPopup] = useState(false); // For showing popup\r\n  const [selectedHistoryItem, setSelectedHistoryItem] = useState(null); // To store the selected quiz item\r\n\r\n  useEffect(() => {\r\n    const loadStudentData = async () => {\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          const data = await import(`../data/students/${currentStudent.id}.js`);\r\n          setStudent(data.default);\r\n          \r\n          // Load quiz history from localStorage\r\n          const storedHistory = JSON.parse(localStorage.getItem('quizHistory')) || [];\r\n          setQuizHistory(storedHistory);\r\n\r\n          // Show notification if no quiz history exists (first quiz)\r\n          if (storedHistory.length === 0) {\r\n            setShowFirstQuizNotification(true);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading student data:', err);\r\n          setError('Failed to load student data.');\r\n        }\r\n      } else {\r\n        setError('No current student data available.');\r\n      }\r\n    };\r\n\r\n    loadStudentData();\r\n  }, [currentStudent]);\r\n\r\n  const studentGrade = student ? `Grade ${student.personalDetails.grade}` : '';\r\n\r\n  useEffect(() => {\r\n    if (studentGrade) {\r\n      const subjects = Object.keys(quizData).filter(subject => \r\n        quizData[subject][studentGrade] !== undefined\r\n      );\r\n      setAvailableSubjects(subjects);\r\n    }\r\n  }, [studentGrade]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubject && studentGrade) {\r\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\r\n      setAvailableTopics(topics);\r\n    }\r\n  }, [selectedSubject, studentGrade]);\r\n\r\n  const handleStartQuiz = () => {\r\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\r\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\r\n    setQuestions(shuffledQuestions);\r\n    setCurrentQuestionIndex(0);\r\n    setShowResult(false);\r\n    setScore(0);\r\n    setSelectedAnswer('');\r\n    setShowFirstQuizNotification(false); // Hide notification after starting the quiz\r\n\tsetShowHistory(false); // Hide quiz history when quiz starts\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResult(true);\r\n      saveQuizHistory();\r\n\t  setShowHistory(true); // Show quiz history when quiz is finished\r\n    }\r\n  };\r\n\r\n  const saveQuizHistory = () => {\r\n    const feedback = getFeedback(score, questions.length);\r\n    const newHistory = {\r\n      date: new Date().toISOString().split('T')[0],\r\n      subject: selectedSubject,\r\n      topic: selectedTopic,\r\n      numQuestions: questions.length,\r\n      score: score,\r\n      feedback: feedback\r\n    };\r\n\r\n    // Save quiz history to localStorage\r\n    const updatedHistory = [newHistory, ...quizHistory]; // latest first\r\n    setQuizHistory(updatedHistory);\r\n    localStorage.setItem('quizHistory', JSON.stringify(updatedHistory));\r\n  };\r\n\r\n  const getFeedback = (score, total) => {\r\n    const percentage = (score / total) * 100;\r\n    if (percentage === 100) {\r\n      return \"Outstanding! You got everything correct!\";\r\n    } else if (percentage >= 80) {\r\n      return \"Great job! You're doing really well!\";\r\n    } else if (percentage >= 50) {\r\n      return \"Good effort! Keep practicing!\";\r\n    } else {\r\n      return \"Don't worry, keep trying and you'll improve!\";\r\n    }\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setQuestions([]);\r\n    setSelectedSubject('');\r\n    setSelectedTopic('');\r\n    setNumQuestions(5);\r\n    setShowResult(false);\r\n  };\r\n\r\n  const handleClickHistoryItem = (historyItem) => {\r\n    setSelectedHistoryItem(historyItem);\r\n    setOpenPopup(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setOpenPopup(false);\r\n    setSelectedHistoryItem(null);\r\n  };\r\n\r\n  if (error) {\r\n    return <Typography sx={{ color: 'red', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  if (!student) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>Loading...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c2c2c',\r\n        backgroundImage: `url(${logo})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundBlendMode: 'overlay',\r\n        filter: 'blur(0px)',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {/* Background overlay */}\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(44, 44, 44, 0.8)',\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: 'teal' }}>\r\n        Quiz for {student.personalDetails.name}\r\n      </Typography>\r\n\r\n      {showFirstQuizNotification && (\r\n        <Typography sx={{ color: 'orange', mb: 2 }}>\r\n          Your quiz history will only be saved on this device. You will not be able to access it from other devices.\r\n        </Typography>\r\n      )}\r\n\r\n      {!questions.length && !showResult && (\r\n        <>\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={selectedSubject} \r\n              onChange={(e) => setSelectedSubject(e.target.value)} \r\n              displayEmpty\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value=\"\" disabled>Select Subject</MenuItem>\r\n              {availableSubjects.map((subject) => (\r\n                <MenuItem key={subject} value={subject} sx={{ color: 'teal' }}>{subject}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {selectedSubject && (\r\n            <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n              <Select \r\n                value={selectedTopic} \r\n                onChange={(e) => setSelectedTopic(e.target.value)} \r\n                displayEmpty\r\n                sx={{ color: 'white', borderColor: 'teal' }}\r\n              >\r\n                <MenuItem value=\"\" disabled>Select Topic</MenuItem>\r\n                {availableTopics.map((topic) => (\r\n                  <MenuItem key={topic} value={topic} sx={{ color: 'teal' }}>{topic}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={numQuestions} \r\n              onChange={(e) => setNumQuestions(e.target.value)}\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value={5}>5 Questions</MenuItem>\r\n              <MenuItem value={10}>10 Questions</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleStartQuiz} \r\n            disabled={!selectedTopic}\r\n            sx={{ color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Start Quiz\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {questions.length > 0 && !showResult && (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ color: 'teal' }}>\r\n            {questions[currentQuestionIndex].question}\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup value={selectedAnswer} onChange={handleAnswerChange}>\r\n            {questions[currentQuestionIndex].options.map((option, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  value={option}\r\n                  control={<Radio sx={{ color: 'teal' }} />}\r\n                  label={option}\r\n                  sx={{ color: 'teal' }}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!selectedAnswer}\r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {showResult && (\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'white' }}>\r\n            Quiz Completed!\r\n          </Typography>\r\n          <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n            Your Score: {score} / {questions.length}\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ mt: 1, color: 'teal' }}>\r\n            {getFeedback(score, questions.length)}\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleRestartQuiz} \r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Restart Quiz\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      {quizHistory.length > 0 && showHistory && ( // Only show if not taking a quiz\r\n        <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'teal' }}>\r\n            Quiz History\r\n          </Typography>\r\n          <List>\r\n            {quizHistory.map((history, index) => (\r\n              <Paper key={index} sx={{ mb: 2, p: 2, backgroundColor: '#2c2c2c', border: '1px solid teal' }}>\r\n                <ListItem button onClick={() => handleClickHistoryItem(history)}>\r\n                  <ListItemText \r\n                    primary={<Typography variant=\"body1\" sx={{ color: 'white' }}>Subject: {history.subject}</Typography>}\r\n                    secondary={\r\n                      <>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Topic: {history.topic}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Score: {history.score}/{history.numQuestions}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>{history.feedback}</Typography>\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Popup Dialog for quiz details */}\r\n      <Dialog open={openPopup} onClose={handleClosePopup}>\r\n        <DialogTitle>Quiz Details</DialogTitle>\r\n        <DialogContent>\r\n          {selectedHistoryItem && (\r\n            <>\r\n              <DialogContentText>Subject: {selectedHistoryItem.subject}</DialogContentText>\r\n              <DialogContentText>Topic: {selectedHistoryItem.topic}</DialogContentText>\r\n              <DialogContentText>Score: {selectedHistoryItem.score}/{selectedHistoryItem.numQuestions}</DialogContentText>\r\n              <DialogContentText>Feedback: {selectedHistoryItem.feedback}</DialogContentText>\r\n              {/* Display additional details here if necessary */}\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClosePopup} color=\"primary\">Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}