{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const StudentContext=/*#__PURE__*/createContext();export const useStudent=()=>useContext(StudentContext);export const StudentProvider=_ref=>{let{children}=_ref;const[currentStudent,setCurrentStudent]=useState(()=>{try{const savedStudent=localStorage.getItem('currentStudent');return savedStudent?JSON.parse(savedStudent):null;}catch(error){console.error('Failed to parse student data from localStorage:',error);return null;// If there's an error, return null to avoid crashes\n}});useEffect(()=>{if(currentStudent){try{// Save current student to localStorage when they log in\nlocalStorage.setItem('currentStudent',JSON.stringify(currentStudent));}catch(error){console.error('Failed to save student data to localStorage:',error);}}else{// Remove student from localStorage when they log out\nlocalStorage.removeItem('currentStudent');}},[currentStudent]);return/*#__PURE__*/_jsx(StudentContext.Provider,{value:{currentStudent,setCurrentStudent},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","StudentContext","useStudent","StudentProvider","_ref","children","currentStudent","setCurrentStudent","savedStudent","localStorage","getItem","JSON","parse","error","console","setItem","stringify","removeItem","Provider","value"],"sources":["C:/Users/thabi/Desktop/Web/vincentpt.co.za/src/contexts/StudentContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst StudentContext = createContext();\r\n\r\nexport const useStudent = () => useContext(StudentContext);\r\n\r\nexport const StudentProvider = ({ children }) => {\r\n  const [currentStudent, setCurrentStudent] = useState(() => {\r\n    try {\r\n      const savedStudent = localStorage.getItem('currentStudent');\r\n      return savedStudent ? JSON.parse(savedStudent) : null;\r\n    } catch (error) {\r\n      console.error('Failed to parse student data from localStorage:', error);\r\n      return null; // If there's an error, return null to avoid crashes\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentStudent) {\r\n      try {\r\n        // Save current student to localStorage when they log in\r\n        localStorage.setItem('currentStudent', JSON.stringify(currentStudent));\r\n      } catch (error) {\r\n        console.error('Failed to save student data to localStorage:', error);\r\n      }\r\n    } else {\r\n      // Remove student from localStorage when they log out\r\n      localStorage.removeItem('currentStudent');\r\n    }\r\n  }, [currentStudent]);\r\n\r\n  return (\r\n    <StudentContext.Provider value={{ currentStudent, setCurrentStudent }}>\r\n      {children}\r\n    </StudentContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,cAAc,cAAGN,aAAa,CAAC,CAAC,CAEtC,MAAO,MAAM,CAAAO,UAAU,CAAGA,CAAA,GAAMN,UAAU,CAACK,cAAc,CAAC,CAE1D,MAAO,MAAM,CAAAE,eAAe,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1C,KAAM,CAACE,cAAc,CAAEC,iBAAiB,CAAC,CAAGV,QAAQ,CAAC,IAAM,CACzD,GAAI,CACF,KAAM,CAAAW,YAAY,CAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAC3D,MAAO,CAAAF,YAAY,CAAGG,IAAI,CAACC,KAAK,CAACJ,YAAY,CAAC,CAAG,IAAI,CACvD,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,CAAEA,KAAK,CAAC,CACvE,MAAO,KAAI,CAAE;AACf,CACF,CAAC,CAAC,CAEFf,SAAS,CAAC,IAAM,CACd,GAAIQ,cAAc,CAAE,CAClB,GAAI,CACF;AACAG,YAAY,CAACM,OAAO,CAAC,gBAAgB,CAAEJ,IAAI,CAACK,SAAS,CAACV,cAAc,CAAC,CAAC,CACxE,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CACtE,CACF,CAAC,IAAM,CACL;AACAJ,YAAY,CAACQ,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CACF,CAAC,CAAE,CAACX,cAAc,CAAC,CAAC,CAEpB,mBACEN,IAAA,CAACC,cAAc,CAACiB,QAAQ,EAACC,KAAK,CAAE,CAAEb,cAAc,CAAEC,iBAAkB,CAAE,CAAAF,QAAA,CACnEA,QAAQ,CACc,CAAC,CAE9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}