{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\FormulaSheets.js\",\n  _s = $RefreshSig$();\n// src/components/FormulaSheets.js\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\nimport formulasData from '../data/formulas.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaSheets = () => {\n  _s();\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedGrade, setSelectedGrade] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [currentFormulas, setCurrentFormulas] = useState([]);\n  useEffect(() => {\n    if (selectedSubject && selectedGrade && selectedTopic) {\n      const formulas = [];\n\n      // Loop through subjects to match the selected subject\n      formulasData.subjects.forEach(subject => {\n        if (subject.subject === selectedSubject) {\n          subject.grades.forEach(grade => {\n            if (grade.grade === selectedGrade) {\n              grade.topics.forEach(topic => {\n                if (topic.topic === selectedTopic) {\n                  formulas.push(...topic.formulas);\n                }\n              });\n            }\n          });\n        }\n      });\n      setCurrentFormulas(formulas);\n    }\n  }, [selectedSubject, selectedGrade, selectedTopic]);\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        backgroundColor: '#2c2c2c',\n        color: '#fff',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Formula Sheets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Subject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedSubject,\n          onChange: e => setSelectedSubject(e.target.value),\n          children: formulasData.subjects.map(subject => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: subject.subject,\n            children: subject.subject\n          }, subject.subject, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), selectedSubject && /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Grade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedGrade,\n          onChange: e => setSelectedGrade(e.target.value),\n          children: formulasData.subjects.find(s => s.subject === selectedSubject).grades.map(grade => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: grade.grade,\n            children: grade.grade\n          }, grade.grade, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), selectedGrade && /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Topic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTopic,\n          onChange: e => setSelectedTopic(e.target.value),\n          children: formulasData.subjects.find(s => s.subject === selectedSubject).grades.find(g => g.grade === selectedGrade).topics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: topic.topic,\n            children: topic.topic\n          }, topic.topic, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), currentFormulas.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          width: '100%',\n          maxWidth: 600\n        },\n        children: currentFormulas.map((formula, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: [\"Formula:\", /*#__PURE__*/_jsxDEV(MathJax, {\n              children: `\\\\( ${formula.formula} \\\\)`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Breakdown:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), Object.entries(formula.breakdown).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 23\n              }, this), \" \", value]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Problem:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), \" \", formula.example.problem]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Solution:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), formula.example.solution.map((step, i) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: step\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(FormulaSheets, \"vz2lAURdQk8XjNeTqBC/jazMma4=\");\n_c = FormulaSheets;\nexport default FormulaSheets;\nvar _c;\n$RefreshReg$(_c, \"FormulaSheets\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","Select","MenuItem","FormControl","InputLabel","MathJax","MathJaxContext","formulasData","jsxDEV","_jsxDEV","FormulaSheets","_s","selectedSubject","setSelectedSubject","selectedGrade","setSelectedGrade","selectedTopic","setSelectedTopic","currentFormulas","setCurrentFormulas","formulas","subjects","forEach","subject","grades","grade","topics","topic","push","children","sx","flexGrow","p","backgroundColor","color","minHeight","display","flexDirection","alignItems","justifyContent","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","minWidth","value","onChange","e","target","map","find","s","g","length","mt","width","maxWidth","formula","index","Object","entries","breakdown","key","example","problem","solution","step","i","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/FormulaSheets.js"],"sourcesContent":["// src/components/FormulaSheets.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, Select, MenuItem, FormControl, InputLabel } from '@mui/material';\r\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\r\nimport formulasData from '../data/formulas.json'; // Import the JSON file\r\n\r\nconst FormulaSheets = () => {\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedGrade, setSelectedGrade] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [currentFormulas, setCurrentFormulas] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubject && selectedGrade && selectedTopic) {\r\n      const formulas = [];\r\n\r\n      // Loop through subjects to match the selected subject\r\n      formulasData.subjects.forEach((subject) => {\r\n        if (subject.subject === selectedSubject) {\r\n          subject.grades.forEach((grade) => {\r\n            if (grade.grade === selectedGrade) {\r\n              grade.topics.forEach((topic) => {\r\n                if (topic.topic === selectedTopic) {\r\n                  formulas.push(...topic.formulas);\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      setCurrentFormulas(formulas);\r\n    }\r\n  }, [selectedSubject, selectedGrade, selectedTopic]);\r\n\r\n  return (\r\n    <MathJaxContext>\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n          minHeight: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Formula Sheets\r\n        </Typography>\r\n        \r\n        {/* Subject Selector */}\r\n        <FormControl sx={{ mb: 2, minWidth: 200 }}>\r\n          <InputLabel>Subject</InputLabel>\r\n          <Select\r\n            value={selectedSubject}\r\n            onChange={(e) => setSelectedSubject(e.target.value)}\r\n          >\r\n            {formulasData.subjects.map((subject) => (\r\n              <MenuItem key={subject.subject} value={subject.subject}>\r\n                {subject.subject}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {/* Grade Selector */}\r\n        {selectedSubject && (\r\n          <FormControl sx={{ mb: 2, minWidth: 200 }}>\r\n            <InputLabel>Grade</InputLabel>\r\n            <Select\r\n              value={selectedGrade}\r\n              onChange={(e) => setSelectedGrade(e.target.value)}\r\n            >\r\n              {formulasData.subjects\r\n                .find((s) => s.subject === selectedSubject)\r\n                .grades.map((grade) => (\r\n                  <MenuItem key={grade.grade} value={grade.grade}>\r\n                    {grade.grade}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n        {/* Topic Selector */}\r\n        {selectedGrade && (\r\n          <FormControl sx={{ mb: 2, minWidth: 200 }}>\r\n            <InputLabel>Topic</InputLabel>\r\n            <Select\r\n              value={selectedTopic}\r\n              onChange={(e) => setSelectedTopic(e.target.value)}\r\n            >\r\n              {formulasData.subjects\r\n                .find((s) => s.subject === selectedSubject)\r\n                .grades.find((g) => g.grade === selectedGrade)\r\n                .topics.map((topic) => (\r\n                  <MenuItem key={topic.topic} value={topic.topic}>\r\n                    {topic.topic}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n        {/* Display Selected Formulas */}\r\n        {currentFormulas.length > 0 && (\r\n          <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n            {currentFormulas.map((formula, index) => (\r\n              <Box key={index} sx={{ mb: 3 }}>\r\n                <Typography variant=\"h6\">\r\n                  Formula: \r\n                  {/* Render the formula using MathJax */}\r\n                  <MathJax>{`\\\\( ${formula.formula} \\\\)`}</MathJax>\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Breakdown:</strong>\r\n                  {Object.entries(formula.breakdown).map(([key, value]) => (\r\n                    <Typography key={key}>\r\n                      <strong>{key}:</strong> {value}\r\n                    </Typography>\r\n                  ))}\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 1 }}>\r\n                  <strong>Example Problem:</strong> {formula.example.problem}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>Solution:</strong>\r\n                  {formula.example.solution.map((step, i) => (\r\n                    <Typography key={i}>{step}</Typography>\r\n                  ))}\r\n                </Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </MathJaxContext>\r\n  );\r\n};\r\n\r\nexport default FormulaSheets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}