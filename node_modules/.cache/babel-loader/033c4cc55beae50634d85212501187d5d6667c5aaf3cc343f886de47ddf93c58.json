{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\FormulaSheets.js\",\n  _s = $RefreshSig$();\n// src/components/FormulaSheets.js\nimport React, { useState } from 'react';\nimport { Box, Typography, TextField } from '@mui/material';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\nimport formulasData from '../data/formulas.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaSheets = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Filter formulas based on search term\n  const filteredFormulas = formulasData.formulas.filter(formula => formula.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        backgroundColor: '#2c2c2c',\n        color: '#fff',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Formula Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for a formula\",\n        variant: \"outlined\",\n        fullWidth: true,\n        sx: {\n          mb: 3,\n          maxWidth: 600\n        },\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), filteredFormulas.length > 0 ? filteredFormulas.map((formula, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3,\n          width: '100%',\n          maxWidth: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [formula.name, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [\"Formula: \", /*#__PURE__*/_jsxDEV(MathJax, {\n            children: `\\\\( ${formula.formula} \\\\)`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Breakdown:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), Object.entries(formula.breakdown).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [key, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), \" \", value]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Example Problem:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), \" \", formula.example.problem]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Solution:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), formula.example.solution.map((step, i) => /*#__PURE__*/_jsxDEV(Typography, {\n            children: step\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No formulas found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(FormulaSheets, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = FormulaSheets;\nexport default FormulaSheets;\nvar _c;\n$RefreshReg$(_c, \"FormulaSheets\");","map":{"version":3,"names":["React","useState","Box","Typography","TextField","MathJax","MathJaxContext","formulasData","jsxDEV","_jsxDEV","FormulaSheets","_s","searchTerm","setSearchTerm","filteredFormulas","formulas","filter","formula","name","toLowerCase","includes","children","sx","flexGrow","p","backgroundColor","color","minHeight","display","flexDirection","alignItems","justifyContent","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","mb","maxWidth","value","onChange","e","target","length","map","index","width","mt","Object","entries","breakdown","key","example","problem","solution","step","i","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/FormulaSheets.js"],"sourcesContent":["// src/components/FormulaSheets.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, TextField } from '@mui/material';\r\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\r\nimport formulasData from '../data/formulas.json'; // Import the JSON file\r\n\r\nconst FormulaSheets = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Filter formulas based on search term\r\n  const filteredFormulas = formulasData.formulas.filter(formula =>\r\n    formula.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <MathJaxContext>\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n          minHeight: '100vh',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Formula Dictionary\r\n        </Typography>\r\n\r\n        {/* Search Bar */}\r\n        <TextField\r\n          label=\"Search for a formula\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          sx={{ mb: 3, maxWidth: 600 }}\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n\r\n        {/* Display Filtered Formulas */}\r\n        {filteredFormulas.length > 0 ? (\r\n          filteredFormulas.map((formula, index) => (\r\n            <Box key={index} sx={{ mb: 3, width: '100%', maxWidth: 600 }}>\r\n              <Typography variant=\"h6\">\r\n                {formula.name}:\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                Formula: <MathJax>{`\\\\( ${formula.formula} \\\\)`}</MathJax>\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                <strong>Breakdown:</strong>\r\n                {Object.entries(formula.breakdown).map(([key, value]) => (\r\n                  <Typography key={key}>\r\n                    <strong>{key}:</strong> {value}\r\n                  </Typography>\r\n                ))}\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                <strong>Example Problem:</strong> {formula.example.problem}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>Solution:</strong>\r\n                {formula.example.solution.map((step, i) => (\r\n                  <Typography key={i}>{step}</Typography>\r\n                ))}\r\n              </Typography>\r\n            </Box>\r\n          ))\r\n        ) : (\r\n          <Typography variant=\"body1\">No formulas found</Typography>\r\n        )}\r\n      </Box>\r\n    </MathJaxContext>\r\n  );\r\n};\r\n\r\nexport default FormulaSheets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}