{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\AIQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport quizData from '../data/quizQuestions.json';\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst logo = process.env.PUBLIC_URL + '/logo.png'; // Reference to the logo\n\nconst AIQuiz = () => {\n  _s();\n  const {\n    currentStudent\n  } = useStudent(); // Get the current student from context\n  const [student, setStudent] = useState(null); // State for student data\n  const [error, setError] = useState(null); // State for error handling\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [availableSubjects, setAvailableSubjects] = useState([]);\n  const [availableTopics, setAvailableTopics] = useState([]);\n  const [quizHistory, setQuizHistory] = useState([]);\n  const [showFirstQuizNotification, setShowFirstQuizNotification] = useState(false); // New state for first quiz notification\n\n  useEffect(() => {\n    const loadStudentData = async () => {\n      if (currentStudent && currentStudent.id) {\n        try {\n          const data = await import(`../data/students/${currentStudent.id}.js`);\n          setStudent(data.default);\n\n          // Load quiz history from localStorage\n          const storedHistory = JSON.parse(localStorage.getItem('quizHistory')) || [];\n          setQuizHistory(storedHistory);\n\n          // Show notification if no quiz history exists (first quiz)\n          if (storedHistory.length === 0) {\n            setShowFirstQuizNotification(true);\n          }\n        } catch (err) {\n          console.error('Error loading student data:', err);\n          setError('Failed to load student data.');\n        }\n      } else {\n        setError('No current student data available.');\n      }\n    };\n    loadStudentData();\n  }, [currentStudent]);\n  const studentGrade = student ? `Grade ${student.personalDetails.grade}` : '';\n  useEffect(() => {\n    if (studentGrade) {\n      const subjects = Object.keys(quizData).filter(subject => quizData[subject][studentGrade] !== undefined);\n      setAvailableSubjects(subjects);\n    }\n  }, [studentGrade]);\n  useEffect(() => {\n    if (selectedSubject && studentGrade) {\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\n      setAvailableTopics(topics);\n    }\n  }, [selectedSubject, studentGrade]);\n  const handleStartQuiz = () => {\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n    setShowResult(false);\n    setScore(0);\n    setSelectedAnswer('');\n  };\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer('');\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n      saveQuizHistory();\n    }\n  };\n  const saveQuizHistory = () => {\n    const feedback = getFeedback(score, questions.length);\n    const newHistory = {\n      date: new Date().toISOString().split('T')[0],\n      subject: selectedSubject,\n      topic: selectedTopic,\n      numQuestions: questions.length,\n      score: score,\n      feedback: feedback\n    };\n\n    // Save quiz history to localStorage\n    const updatedHistory = [...quizHistory, newHistory];\n    setQuizHistory(updatedHistory);\n    localStorage.setItem('quizHistory', JSON.stringify(updatedHistory));\n  };\n  const getFeedback = (score, total) => {\n    const percentage = score / total * 100;\n    if (percentage === 100) {\n      return \"Outstanding! You got everything correct!\";\n    } else if (percentage >= 80) {\n      return \"Great job! You're doing really well!\";\n    } else if (percentage >= 50) {\n      return \"Good effort! Keep practicing!\";\n    } else {\n      return \"Don't worry, keep trying and you'll improve!\";\n    }\n  };\n  const handleRestartQuiz = () => {\n    setQuestions([]);\n    setSelectedSubject('');\n    setSelectedTopic('');\n    setNumQuestions(5);\n    setShowResult(false);\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 12\n    }, this);\n  }\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#ffffff',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: '#2c2c2c',\n      backgroundImage: `url(${logo})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundAttachment: 'fixed',\n      backgroundBlendMode: 'overlay',\n      filter: 'blur(0px)',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(44, 44, 44, 0.8)',\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: 'teal'\n      },\n      children: [\"Quiz for \", student.personalDetails.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), showFirstQuizNotification && /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: 'orange',\n        mb: 2\n      },\n      children: \"Your quiz history will only be saved on this device. You will not be able to access it from other devices.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), !questions.length && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), questions.length > 0 && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), showResult && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), quizHistory.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        width: '100%',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: \"Quiz History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: quizHistory.map((history, index) => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mb: 2,\n            p: 2,\n            backgroundColor: '#2c2c2c',\n            border: '1px solid teal'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'white'\n                },\n                children: [\"Subject: \", history.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Topic: \", history.topic]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Score: \", history.score, \"/\", history.numQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: history.feedback\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuiz, \"jaavMWQny66Hf4NxHRXGuCTDGMM=\", false, function () {\n  return [useStudent];\n});\n_c = AIQuiz;\nexport default AIQuiz;\nvar _c;\n$RefreshReg$(_c, \"AIQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FormControl","MenuItem","Select","RadioGroup","FormControlLabel","Radio","List","ListItem","ListItemText","Paper","quizData","useStudent","jsxDEV","_jsxDEV","Fragment","_Fragment","logo","process","env","PUBLIC_URL","AIQuiz","_s","currentStudent","student","setStudent","error","setError","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","availableSubjects","setAvailableSubjects","availableTopics","setAvailableTopics","quizHistory","setQuizHistory","showFirstQuizNotification","setShowFirstQuizNotification","loadStudentData","id","data","default","storedHistory","JSON","parse","localStorage","getItem","length","err","console","studentGrade","personalDetails","grade","subjects","Object","keys","filter","subject","undefined","topics","handleStartQuiz","selectedQuestions","shuffledQuestions","sort","Math","random","slice","handleAnswerChange","event","target","value","handleNextQuestion","answer","saveQuizHistory","feedback","getFeedback","newHistory","date","Date","toISOString","split","topic","updatedHistory","setItem","stringify","total","percentage","handleRestartQuiz","sx","color","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","p","minHeight","display","flexDirection","alignItems","justifyContent","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","backgroundAttachment","backgroundBlendMode","position","top","left","right","bottom","zIndex","variant","gutterBottom","name","mb","mt","width","maxWidth","map","history","index","border","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/AIQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport quizData from '../data/quizQuestions.json';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\r\n\r\nconst logo = process.env.PUBLIC_URL + '/logo.png'; // Reference to the logo\r\n\r\nconst AIQuiz = () => {\r\n  const { currentStudent } = useStudent(); // Get the current student from context\r\n  const [student, setStudent] = useState(null); // State for student data\r\n  const [error, setError] = useState(null); // State for error handling\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [availableSubjects, setAvailableSubjects] = useState([]);\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  const [quizHistory, setQuizHistory] = useState([]);\r\n  const [showFirstQuizNotification, setShowFirstQuizNotification] = useState(false); // New state for first quiz notification\r\n\r\n  useEffect(() => {\r\n    const loadStudentData = async () => {\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          const data = await import(`../data/students/${currentStudent.id}.js`);\r\n          setStudent(data.default);\r\n          \r\n          // Load quiz history from localStorage\r\n          const storedHistory = JSON.parse(localStorage.getItem('quizHistory')) || [];\r\n          setQuizHistory(storedHistory);\r\n\r\n          // Show notification if no quiz history exists (first quiz)\r\n          if (storedHistory.length === 0) {\r\n            setShowFirstQuizNotification(true);\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading student data:', err);\r\n          setError('Failed to load student data.');\r\n        }\r\n      } else {\r\n        setError('No current student data available.');\r\n      }\r\n    };\r\n\r\n    loadStudentData();\r\n  }, [currentStudent]);\r\n\r\n  const studentGrade = student ? `Grade ${student.personalDetails.grade}` : '';\r\n\r\n  useEffect(() => {\r\n    if (studentGrade) {\r\n      const subjects = Object.keys(quizData).filter(subject => \r\n        quizData[subject][studentGrade] !== undefined\r\n      );\r\n      setAvailableSubjects(subjects);\r\n    }\r\n  }, [studentGrade]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubject && studentGrade) {\r\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\r\n      setAvailableTopics(topics);\r\n    }\r\n  }, [selectedSubject, studentGrade]);\r\n\r\n  const handleStartQuiz = () => {\r\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\r\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\r\n    setQuestions(shuffledQuestions);\r\n    setCurrentQuestionIndex(0);\r\n    setShowResult(false);\r\n    setScore(0);\r\n    setSelectedAnswer('');\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResult(true);\r\n      saveQuizHistory();\r\n    }\r\n  };\r\n\r\n  const saveQuizHistory = () => {\r\n    const feedback = getFeedback(score, questions.length);\r\n    const newHistory = {\r\n      date: new Date().toISOString().split('T')[0],\r\n      subject: selectedSubject,\r\n      topic: selectedTopic,\r\n      numQuestions: questions.length,\r\n      score: score,\r\n      feedback: feedback\r\n    };\r\n\r\n    // Save quiz history to localStorage\r\n    const updatedHistory = [...quizHistory, newHistory];\r\n    setQuizHistory(updatedHistory);\r\n    localStorage.setItem('quizHistory', JSON.stringify(updatedHistory));\r\n  };\r\n\r\n  const getFeedback = (score, total) => {\r\n    const percentage = (score / total) * 100;\r\n    if (percentage === 100) {\r\n      return \"Outstanding! You got everything correct!\";\r\n    } else if (percentage >= 80) {\r\n      return \"Great job! You're doing really well!\";\r\n    } else if (percentage >= 50) {\r\n      return \"Good effort! Keep practicing!\";\r\n    } else {\r\n      return \"Don't worry, keep trying and you'll improve!\";\r\n    }\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setQuestions([]);\r\n    setSelectedSubject('');\r\n    setSelectedTopic('');\r\n    setNumQuestions(5);\r\n    setShowResult(false);\r\n  };\r\n\r\n  if (error) {\r\n    return <Typography sx={{ color: 'red', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  if (!student) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>Loading...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#2c2c2c',\r\n        backgroundImage: `url(${logo})`,\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundAttachment: 'fixed',\r\n        backgroundBlendMode: 'overlay',\r\n        filter: 'blur(0px)',\r\n        position: 'relative',\r\n      }}\r\n    >\r\n      {/* Background overlay */}\r\n      <Box\r\n        sx={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          backgroundColor: 'rgba(44, 44, 44, 0.8)',\r\n          zIndex: -1,\r\n        }}\r\n      />\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: 'teal' }}>\r\n        Quiz for {student.personalDetails.name}\r\n      </Typography>\r\n\r\n      {showFirstQuizNotification && (\r\n        <Typography sx={{ color: 'orange', mb: 2 }}>\r\n          Your quiz history will only be saved on this device. You will not be able to access it from other devices.\r\n        </Typography>\r\n      )}\r\n\r\n      {!questions.length && !showResult && (\r\n        <>\r\n          {/* Subject, topic selection and start quiz */}\r\n        </>\r\n      )}\r\n\r\n      {questions.length > 0 && !showResult && (\r\n        <>\r\n          {/* Quiz questions and answers */}\r\n        </>\r\n      )}\r\n\r\n      {showResult && (\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          {/* Show quiz result */}\r\n        </Box>\r\n      )}\r\n\r\n      {quizHistory.length > 0 && (\r\n        <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'teal' }}>\r\n            Quiz History\r\n          </Typography>\r\n          <List>\r\n            {quizHistory.map((history, index) => (\r\n              <Paper key={index} sx={{ mb: 2, p: 2, backgroundColor: '#2c2c2c', border: '1px solid teal' }}>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary={<Typography variant=\"body1\" sx={{ color: 'white' }}>Subject: {history.subject}</Typography>}\r\n                    secondary={\r\n                      <>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Topic: {history.topic}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Score: {history.score}/{history.numQuestions}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>{history.feedback}</Typography>\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}