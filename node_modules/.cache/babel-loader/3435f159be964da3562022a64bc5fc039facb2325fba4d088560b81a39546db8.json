{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\Flashcards.js\",\n  _s = $RefreshSig$();\n// src/components/Flashcards.js\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst flashcardsData = [{\n  question: 'What is the capital of South Africa?',\n  answer: 'Pretoria'\n}, {\n  question: 'What is the chemical symbol for water?',\n  answer: 'H2O'\n}, {\n  question: 'Who discovered gravity?',\n  answer: 'Isaac Newton'\n}];\nconst Flashcards = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const handleNextCard = () => {\n    setIsFlipped(false); // Reset flip state when going to the next card\n    setCurrentIndex(prevIndex => (prevIndex + 1) % flashcardsData.length);\n  };\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped); // Flip between question and answer\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      backgroundColor: '#f0f4f8',\n      color: '#2c2c2c',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      color: \"teal\",\n      children: \"Flashcards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 300,\n        maxWidth: 500,\n        backgroundColor: '#e0f7fa',\n        border: '2px solid teal',\n        borderRadius: '12px',\n        boxShadow: 3,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '200px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"teal\",\n          children: isFlipped ? flashcardsData[currentIndex].answer : flashcardsData[currentIndex].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleFlip,\n        children: isFlipped ? 'Show Question' : 'Show Answer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"teal\",\n        onClick: handleNextCard,\n        children: \"Next Card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Flashcards, \"09T0kIGwIlMVxtn2OuC5jDG6YJg=\");\n_c = Flashcards;\nexport default Flashcards;\nvar _c;\n$RefreshReg$(_c, \"Flashcards\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Card","CardContent","jsxDEV","_jsxDEV","flashcardsData","question","answer","Flashcards","_s","currentIndex","setCurrentIndex","isFlipped","setIsFlipped","handleNextCard","prevIndex","length","handleFlip","sx","flexGrow","p","backgroundColor","color","minHeight","display","flexDirection","alignItems","justifyContent","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","maxWidth","border","borderRadius","boxShadow","mb","height","gap","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/Flashcards.js"],"sourcesContent":["// src/components/Flashcards.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, Button, Card, CardContent } from '@mui/material';\r\n\r\nconst flashcardsData = [\r\n  { question: 'What is the capital of South Africa?', answer: 'Pretoria' },\r\n  { question: 'What is the chemical symbol for water?', answer: 'H2O' },\r\n  { question: 'Who discovered gravity?', answer: 'Isaac Newton' },\r\n];\r\n\r\nconst Flashcards = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n\r\n  const handleNextCard = () => {\r\n    setIsFlipped(false); // Reset flip state when going to the next card\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % flashcardsData.length);\r\n  };\r\n\r\n  const handleFlip = () => {\r\n    setIsFlipped(!isFlipped); // Flip between question and answer\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        backgroundColor: '#f0f4f8',\r\n        color: '#2c2c2c',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom color=\"teal\">\r\n        Flashcards\r\n      </Typography>\r\n      <Card\r\n        sx={{\r\n          minWidth: 300,\r\n          maxWidth: 500,\r\n          backgroundColor: '#e0f7fa',\r\n          border: '2px solid teal',\r\n          borderRadius: '12px',\r\n          boxShadow: 3,\r\n          mb: 4,\r\n        }}\r\n      >\r\n        <CardContent\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            height: '200px',\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" color=\"teal\">\r\n            {isFlipped\r\n              ? flashcardsData[currentIndex].answer\r\n              : flashcardsData[currentIndex].question}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n      <Box sx={{ display: 'flex', gap: 2 }}>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleFlip}>\r\n          {isFlipped ? 'Show Question' : 'Show Answer'}\r\n        </Button>\r\n        <Button variant=\"outlined\" color=\"teal\" onClick={handleNextCard}>\r\n          Next Card\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Flashcards;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}