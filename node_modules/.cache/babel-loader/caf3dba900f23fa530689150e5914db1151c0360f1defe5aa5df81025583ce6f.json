{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\FormulaSheets.js\",\n  _s = $RefreshSig$();\n// src/components/FormulaSheets.js\nimport React, { useState } from 'react';\nimport { Box, Typography, List, ListItemButton, ListItemText, Collapse } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\nimport formulasData from '../data/formulas.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaSheets = () => {\n  _s();\n  const [selectedFormula, setSelectedFormula] = useState(null);\n\n  // Toggle the selected formula when clicking on its name\n  const handleFormulaClick = formulaName => {\n    setSelectedFormula(selectedFormula === formulaName ? null : formulaName);\n  };\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        backgroundColor: '#2c2c2c',\n        color: '#fff',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Formula Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: formulasData.formulas.map((formula, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => handleFormulaClick(formula.name),\n            sx: {\n              color: '#008080',\n              // Teal for formula name\n              backgroundColor: selectedFormula === formula.name ? '#444' : '#333',\n              // Darker when selected\n              borderRadius: 1,\n              '&:hover': {\n                backgroundColor: '#444'\n              } // Hover effect\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: formula.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: selectedFormula === formula.name,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                color: '#fff',\n                backgroundColor: '#1e1e1e',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"Formula: \", /*#__PURE__*/_jsxDEV(MathJax, {\n                  children: `\\\\( ${formula.formula} \\\\)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 30\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Breakdown:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this), Object.entries(formula.breakdown).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [key, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, this), \" \", value]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Example Problem:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this), \" \", formula.example.problem]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Solution:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this), formula.example.solution.map((step, i) => /*#__PURE__*/_jsxDEV(Typography, {\n                  children: step\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled List Component for a clean, compact layout\n_s(FormulaSheets, \"bVLlgCZxjPzJ5+gYegpb6RbD+bQ=\");\n_c = FormulaSheets;\nconst StyledList = styled(List)({\n  width: '100%',\n  maxWidth: 600,\n  // Keep the size smaller\n  backgroundColor: '#2c2c2c',\n  // Matching background color\n  borderRadius: '8px'\n});\n_c2 = StyledList;\nexport default FormulaSheets;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormulaSheets\");\n$RefreshReg$(_c2, \"StyledList\");","map":{"version":3,"names":["React","useState","Box","Typography","List","ListItemButton","ListItemText","Collapse","styled","MathJax","MathJaxContext","formulasData","jsxDEV","_jsxDEV","FormulaSheets","_s","selectedFormula","setSelectedFormula","handleFormulaClick","formulaName","children","sx","flexGrow","p","backgroundColor","color","minHeight","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","StyledList","formulas","map","formula","index","mb","onClick","name","borderRadius","primary","in","timeout","unmountOnExit","mt","Object","entries","breakdown","key","value","example","problem","solution","step","i","_c","width","maxWidth","_c2","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/FormulaSheets.js"],"sourcesContent":["// src/components/FormulaSheets.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, List, ListItemButton, ListItemText, Collapse } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\r\nimport formulasData from '../data/formulas.json'; // Import the JSON file\r\n\r\nconst FormulaSheets = () => {\r\n  const [selectedFormula, setSelectedFormula] = useState(null);\r\n\r\n  // Toggle the selected formula when clicking on its name\r\n  const handleFormulaClick = (formulaName) => {\r\n    setSelectedFormula(selectedFormula === formulaName ? null : formulaName);\r\n  };\r\n\r\n  return (\r\n    <MathJaxContext>\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n          minHeight: '100vh',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Formula Dictionary\r\n        </Typography>\r\n\r\n        {/* Display Formula List */}\r\n        <StyledList>\r\n          {formulasData.formulas.map((formula, index) => (\r\n            <Box key={index} sx={{ mb: 2 }}>\r\n              <ListItemButton\r\n                onClick={() => handleFormulaClick(formula.name)}\r\n                sx={{\r\n                  color: '#008080', // Teal for formula name\r\n                  backgroundColor: selectedFormula === formula.name ? '#444' : '#333', // Darker when selected\r\n                  borderRadius: 1,\r\n                  '&:hover': { backgroundColor: '#444' }, // Hover effect\r\n                }}\r\n              >\r\n                <ListItemText primary={formula.name} />\r\n              </ListItemButton>\r\n              <Collapse in={selectedFormula === formula.name} timeout=\"auto\" unmountOnExit>\r\n                <Box sx={{ p: 2, color: '#fff', backgroundColor: '#1e1e1e', borderRadius: 1 }}>\r\n                  <Typography variant=\"body1\">\r\n                    Formula: <MathJax>{`\\\\( ${formula.formula} \\\\)`}</MathJax>\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                    <strong>Breakdown:</strong>\r\n                    {Object.entries(formula.breakdown).map(([key, value]) => (\r\n                      <Typography key={key}>\r\n                        <strong>{key}:</strong> {value}\r\n                      </Typography>\r\n                    ))}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                    <strong>Example Problem:</strong> {formula.example.problem}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    <strong>Solution:</strong>\r\n                    {formula.example.solution.map((step, i) => (\r\n                      <Typography key={i}>{step}</Typography>\r\n                    ))}\r\n                  </Typography>\r\n                </Box>\r\n              </Collapse>\r\n            </Box>\r\n          ))}\r\n        </StyledList>\r\n      </Box>\r\n    </MathJaxContext>\r\n  );\r\n};\r\n\r\n// Styled List Component for a clean, compact layout\r\nconst StyledList = styled(List)({\r\n  width: '100%',\r\n  maxWidth: 600, // Keep the size smaller\r\n  backgroundColor: '#2c2c2c', // Matching background color\r\n  borderRadius: '8px',\r\n});\r\n\r\nexport default FormulaSheets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}