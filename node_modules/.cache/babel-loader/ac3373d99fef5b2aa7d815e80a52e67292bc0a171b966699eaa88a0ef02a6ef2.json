{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\AIQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper } from '@mui/material';\nimport quizData from '../data/quizQuestions.json';\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\nimport { db } from '../firebase'; // Import Firestore\nimport { collection, doc, getDoc, setDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AIQuiz = () => {\n  _s();\n  const {\n    currentStudent\n  } = useStudent(); // Get the current student from context\n  const [student, setStudent] = useState(null); // State for student data\n  const [error, setError] = useState(null); // State for error handling\n  const [loadingHistory, setLoadingHistory] = useState(true); // State for loading indicator\n\n  const [selectedSubject, setSelectedSubject] = useState('');\n  const [selectedTopic, setSelectedTopic] = useState('');\n  const [numQuestions, setNumQuestions] = useState(5);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState('');\n  const [score, setScore] = useState(0);\n  const [showResult, setShowResult] = useState(false);\n  const [availableSubjects, setAvailableSubjects] = useState([]);\n  const [availableTopics, setAvailableTopics] = useState([]);\n  const [quizHistory, setQuizHistory] = useState([]);\n\n  // Load quiz history from Firestore\n  useEffect(() => {\n    const loadQuizHistory = async () => {\n      setLoadingHistory(true); // Start loading\n      if (currentStudent && currentStudent.id) {\n        try {\n          const docRef = doc(db, \"quizHistory\", currentStudent.id);\n          const docSnap = await getDoc(docRef);\n          if (docSnap.exists()) {\n            setQuizHistory(docSnap.data().history || []); // Load the quiz history from Firestore\n          } else {\n            console.log(\"No such document!\");\n          }\n        } catch (err) {\n          console.error('Error loading quiz history:', err);\n          setError('Failed to load quiz history.');\n        }\n      }\n      setLoadingHistory(false); // Stop loading once data is fetched\n    };\n    loadQuizHistory();\n  }, [currentStudent]);\n  const studentGrade = student ? `Grade ${student.personalDetails.grade}` : '';\n  useEffect(() => {\n    if (studentGrade) {\n      const subjects = Object.keys(quizData).filter(subject => quizData[subject][studentGrade] !== undefined);\n      setAvailableSubjects(subjects);\n    }\n  }, [studentGrade]);\n  useEffect(() => {\n    if (selectedSubject && studentGrade) {\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\n      setAvailableTopics(topics);\n    }\n  }, [selectedSubject, studentGrade]);\n  const handleStartQuiz = () => {\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\n    setQuestions(shuffledQuestions);\n    setCurrentQuestionIndex(0);\n    setShowResult(false);\n    setScore(0);\n    setSelectedAnswer('');\n  };\n  const handleAnswerChange = event => {\n    setSelectedAnswer(event.target.value);\n  };\n  const handleNextQuestion = () => {\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\n      setScore(score + 1);\n    }\n    setSelectedAnswer('');\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true);\n      saveQuizHistory();\n    }\n  };\n  const saveQuizHistory = async () => {\n    const feedback = getFeedback(score, questions.length);\n    const newHistory = {\n      date: new Date().toISOString().split('T')[0],\n      subject: selectedSubject,\n      topic: selectedTopic,\n      numQuestions: questions.length,\n      score: score,\n      feedback: feedback\n    };\n\n    // Update quiz history in the state\n    const updatedHistory = [...quizHistory, newHistory];\n    setQuizHistory(updatedHistory);\n\n    // Save updated quiz history to Firestore\n    try {\n      await setDoc(doc(db, \"quizHistory\", currentStudent.id), {\n        history: updatedHistory\n      });\n    } catch (err) {\n      console.error('Error saving quiz history:', err);\n    }\n  };\n  const getFeedback = (score, total) => {\n    const percentage = score / total * 100;\n    if (percentage === 100) {\n      return \"Outstanding! You got everything correct!\";\n    } else if (percentage >= 80) {\n      return \"Great job! You're doing really well!\";\n    } else if (percentage >= 50) {\n      return \"Good effort! Keep practicing!\";\n    } else {\n      return \"Don't worry, keep trying and you'll improve!\";\n    }\n  };\n  const handleRestartQuiz = () => {\n    setQuestions([]);\n    setSelectedSubject('');\n    setSelectedTopic('');\n    setNumQuestions(5);\n    setShowResult(false);\n  };\n\n  // Error state rendering\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Loading state rendering\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        color: '#ffffff',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3,\n      backgroundColor: '#2c2c2c',\n      color: 'teal',\n      minHeight: '100vh',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      sx: {\n        color: 'teal'\n      },\n      children: [\"Quiz for \", student.personalDetails.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), !questions.length && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedSubject,\n          onChange: e => setSelectedSubject(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Subject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), availableSubjects.map(subject => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: subject,\n            sx: {\n              color: 'teal'\n            },\n            children: subject\n          }, subject, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), selectedSubject && /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedTopic,\n          onChange: e => setSelectedTopic(e.target.value),\n          displayEmpty: true,\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 17\n          }, this), availableTopics.map(topic => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: topic,\n            sx: {\n              color: 'teal'\n            },\n            children: topic\n          }, topic, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          mb: 2,\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: numQuestions,\n          onChange: e => setNumQuestions(e.target.value),\n          sx: {\n            color: 'white',\n            borderColor: 'teal'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 5,\n            children: \"5 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: 10,\n            children: \"10 Questions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleStartQuiz,\n        disabled: !selectedTopic,\n        sx: {\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), questions.length > 0 && !showResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        component: \"fieldset\",\n        children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: selectedAnswer,\n          onChange: handleAnswerChange,\n          children: questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {\n              sx: {\n                color: 'teal'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 28\n            }, this),\n            label: option,\n            sx: {\n              color: 'teal'\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleNextQuestion,\n        disabled: !selectedAnswer,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showResult && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'white'\n        },\n        children: \"Quiz Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'white'\n        },\n        children: [\"Your Score: \", score, \" / \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 1,\n          color: 'teal'\n        },\n        children: getFeedback(score, questions.length)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleRestartQuiz,\n        sx: {\n          mt: 2,\n          color: 'white',\n          backgroundColor: 'teal',\n          '&:hover': {\n            backgroundColor: '#008080'\n          }\n        },\n        children: \"Restart Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        width: '100%',\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          color: 'teal'\n        },\n        children: \"Quiz History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), loadingHistory ? /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          color: 'white',\n          textAlign: 'center',\n          mt: 2\n        },\n        children: \"Loading Quiz History...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: quizHistory.map((history, index) => /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mb: 2,\n            p: 2,\n            backgroundColor: '#2c2c2c',\n            border: '1px solid teal'\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  color: 'white'\n                },\n                children: [\"Subject: \", history.subject]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 30\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Topic: \", history.topic]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: [\"Score: \", history.score, \"/\", history.numQuestions]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    color: 'white'\n                  },\n                  children: history.feedback\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(AIQuiz, \"NXSLBTcwRVdSUdXiPpdhxcLjL/c=\", false, function () {\n  return [useStudent];\n});\n_c = AIQuiz;\nexport default AIQuiz;\nvar _c;\n$RefreshReg$(_c, \"AIQuiz\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Button","FormControl","MenuItem","Select","RadioGroup","FormControlLabel","Radio","List","ListItem","ListItemText","Paper","quizData","useStudent","db","collection","doc","getDoc","setDoc","jsxDEV","_jsxDEV","Fragment","_Fragment","AIQuiz","_s","currentStudent","student","setStudent","error","setError","loadingHistory","setLoadingHistory","selectedSubject","setSelectedSubject","selectedTopic","setSelectedTopic","numQuestions","setNumQuestions","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","score","setScore","showResult","setShowResult","availableSubjects","setAvailableSubjects","availableTopics","setAvailableTopics","quizHistory","setQuizHistory","loadQuizHistory","id","docRef","docSnap","exists","data","history","console","log","err","studentGrade","personalDetails","grade","subjects","Object","keys","filter","subject","undefined","topics","handleStartQuiz","selectedQuestions","shuffledQuestions","sort","Math","random","slice","handleAnswerChange","event","target","value","handleNextQuestion","answer","length","saveQuizHistory","feedback","getFeedback","newHistory","date","Date","toISOString","split","topic","updatedHistory","total","percentage","handleRestartQuiz","sx","color","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","flexGrow","p","backgroundColor","minHeight","display","flexDirection","alignItems","justifyContent","variant","gutterBottom","name","mb","minWidth","onChange","e","displayEmpty","borderColor","disabled","map","onClick","question","component","options","option","index","control","label","mt","width","maxWidth","border","primary","secondary","_c","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/AIQuiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, Button, FormControl, MenuItem, Select, RadioGroup, FormControlLabel, Radio, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport quizData from '../data/quizQuestions.json';\r\nimport { useStudent } from '../contexts/StudentContext'; // Import the custom hook\r\nimport { db } from '../firebase'; // Import Firestore\r\nimport { collection, doc, getDoc, setDoc } from 'firebase/firestore';\r\n\r\nconst AIQuiz = () => {\r\n  const { currentStudent } = useStudent(); // Get the current student from context\r\n  const [student, setStudent] = useState(null); // State for student data\r\n  const [error, setError] = useState(null); // State for error handling\r\n  const [loadingHistory, setLoadingHistory] = useState(true); // State for loading indicator\r\n\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedTopic, setSelectedTopic] = useState('');\r\n  const [numQuestions, setNumQuestions] = useState(5);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswer, setSelectedAnswer] = useState('');\r\n  const [score, setScore] = useState(0);\r\n  const [showResult, setShowResult] = useState(false);\r\n  const [availableSubjects, setAvailableSubjects] = useState([]);\r\n  const [availableTopics, setAvailableTopics] = useState([]);\r\n  const [quizHistory, setQuizHistory] = useState([]);\r\n\r\n  // Load quiz history from Firestore\r\n  useEffect(() => {\r\n    const loadQuizHistory = async () => {\r\n      setLoadingHistory(true); // Start loading\r\n      if (currentStudent && currentStudent.id) {\r\n        try {\r\n          const docRef = doc(db, \"quizHistory\", currentStudent.id);\r\n          const docSnap = await getDoc(docRef);\r\n          if (docSnap.exists()) {\r\n            setQuizHistory(docSnap.data().history || []); // Load the quiz history from Firestore\r\n          } else {\r\n            console.log(\"No such document!\");\r\n          }\r\n        } catch (err) {\r\n          console.error('Error loading quiz history:', err);\r\n          setError('Failed to load quiz history.');\r\n        }\r\n      }\r\n      setLoadingHistory(false); // Stop loading once data is fetched\r\n    };\r\n\r\n    loadQuizHistory();\r\n  }, [currentStudent]);\r\n\r\n  const studentGrade = student ? `Grade ${student.personalDetails.grade}` : '';\r\n\r\n  useEffect(() => {\r\n    if (studentGrade) {\r\n      const subjects = Object.keys(quizData).filter(subject => \r\n        quizData[subject][studentGrade] !== undefined\r\n      );\r\n      setAvailableSubjects(subjects);\r\n    }\r\n  }, [studentGrade]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSubject && studentGrade) {\r\n      const topics = Object.keys(quizData[selectedSubject][studentGrade]);\r\n      setAvailableTopics(topics);\r\n    }\r\n  }, [selectedSubject, studentGrade]);\r\n\r\n  const handleStartQuiz = () => {\r\n    const selectedQuestions = quizData[selectedSubject][studentGrade][selectedTopic];\r\n    const shuffledQuestions = selectedQuestions.sort(() => 0.5 - Math.random()).slice(0, numQuestions);\r\n    setQuestions(shuffledQuestions);\r\n    setCurrentQuestionIndex(0);\r\n    setShowResult(false);\r\n    setScore(0);\r\n    setSelectedAnswer('');\r\n  };\r\n\r\n  const handleAnswerChange = (event) => {\r\n    setSelectedAnswer(event.target.value);\r\n  };\r\n\r\n  const handleNextQuestion = () => {\r\n    if (selectedAnswer === questions[currentQuestionIndex].answer) {\r\n      setScore(score + 1);\r\n    }\r\n    setSelectedAnswer('');\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n    } else {\r\n      setShowResult(true);\r\n      saveQuizHistory();\r\n    }\r\n  };\r\n\r\n  const saveQuizHistory = async () => {\r\n    const feedback = getFeedback(score, questions.length);\r\n    const newHistory = {\r\n      date: new Date().toISOString().split('T')[0],\r\n      subject: selectedSubject,\r\n      topic: selectedTopic,\r\n      numQuestions: questions.length,\r\n      score: score,\r\n      feedback: feedback\r\n    };\r\n    \r\n    // Update quiz history in the state\r\n    const updatedHistory = [...quizHistory, newHistory];\r\n    setQuizHistory(updatedHistory);\r\n\r\n    // Save updated quiz history to Firestore\r\n    try {\r\n      await setDoc(doc(db, \"quizHistory\", currentStudent.id), {\r\n        history: updatedHistory\r\n      });\r\n    } catch (err) {\r\n      console.error('Error saving quiz history:', err);\r\n    }\r\n  };\r\n\r\n  const getFeedback = (score, total) => {\r\n    const percentage = (score / total) * 100;\r\n    if (percentage === 100) {\r\n      return \"Outstanding! You got everything correct!\";\r\n    } else if (percentage >= 80) {\r\n      return \"Great job! You're doing really well!\";\r\n    } else if (percentage >= 50) {\r\n      return \"Good effort! Keep practicing!\";\r\n    } else {\r\n      return \"Don't worry, keep trying and you'll improve!\";\r\n    }\r\n  };\r\n\r\n  const handleRestartQuiz = () => {\r\n    setQuestions([]);\r\n    setSelectedSubject('');\r\n    setSelectedTopic('');\r\n    setNumQuestions(5);\r\n    setShowResult(false);\r\n  };\r\n\r\n  // Error state rendering\r\n  if (error) {\r\n    return <Typography sx={{ color: 'red', textAlign: 'center', marginTop: '20px' }}>{error}</Typography>;\r\n  }\r\n\r\n  // Loading state rendering\r\n  if (!student) {\r\n    return <Typography sx={{ color: '#ffffff', textAlign: 'center', marginTop: '20px' }}>Loading...</Typography>;\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 1,\r\n        p: 3,\r\n        backgroundColor: '#2c2c2c',\r\n        color: 'teal',\r\n        minHeight: '100vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" gutterBottom sx={{ color: 'teal' }}>\r\n        Quiz for {student.personalDetails.name}\r\n      </Typography>\r\n\r\n      {!questions.length && !showResult && (\r\n        <>\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={selectedSubject} \r\n              onChange={(e) => setSelectedSubject(e.target.value)} \r\n              displayEmpty\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value=\"\" disabled>Select Subject</MenuItem>\r\n              {availableSubjects.map((subject) => (\r\n                <MenuItem key={subject} value={subject} sx={{ color: 'teal' }}>{subject}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          {selectedSubject && (\r\n            <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n              <Select \r\n                value={selectedTopic} \r\n                onChange={(e) => setSelectedTopic(e.target.value)} \r\n                displayEmpty\r\n                sx={{ color: 'white', borderColor: 'teal' }}\r\n              >\r\n                <MenuItem value=\"\" disabled>Select Topic</MenuItem>\r\n                {availableTopics.map((topic) => (\r\n                  <MenuItem key={topic} value={topic} sx={{ color: 'teal' }}>{topic}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n          <FormControl sx={{ mb: 2, minWidth: 120 }}>\r\n            <Select \r\n              value={numQuestions} \r\n              onChange={(e) => setNumQuestions(e.target.value)}\r\n              sx={{ color: 'white', borderColor: 'teal' }}\r\n            >\r\n              <MenuItem value={5}>5 Questions</MenuItem>\r\n              <MenuItem value={10}>10 Questions</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleStartQuiz} \r\n            disabled={!selectedTopic}\r\n            sx={{ color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Start Quiz\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {questions.length > 0 && !showResult && (\r\n        <>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ color: 'teal' }}>\r\n            {questions[currentQuestionIndex].question}\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <RadioGroup value={selectedAnswer} onChange={handleAnswerChange}>\r\n              {questions[currentQuestionIndex].options.map((option, index) => (\r\n                <FormControlLabel\r\n                  key={index}\r\n                  value={option}\r\n                  control={<Radio sx={{ color: 'teal' }} />}\r\n                  label={option}\r\n                  sx={{ color: 'teal' }}\r\n                />\r\n              ))}\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleNextQuestion}\r\n            disabled={!selectedAnswer}\r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            {currentQuestionIndex < questions.length - 1 ? 'Next' : 'Finish'}\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {showResult && (\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h5\" gutterBottom sx={{ color: 'white' }}>\r\n            Quiz Completed!\r\n          </Typography>\r\n          <Typography variant=\"h6\" sx={{ color: 'white' }}>\r\n            Your Score: {score} / {questions.length}\r\n          </Typography>\r\n          <Typography variant=\"body1\" sx={{ mt: 1, color: 'teal' }}>\r\n            {getFeedback(score, questions.length)}\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={handleRestartQuiz} \r\n            sx={{ mt: 2, color: 'white', backgroundColor: 'teal', '&:hover': { backgroundColor: '#008080' } }}\r\n          >\r\n            Restart Quiz\r\n          </Button>\r\n        </Box>\r\n      )}\r\n\r\n      <Box sx={{ mt: 4, width: '100%', maxWidth: 600 }}>\r\n        <Typography variant=\"h5\" gutterBottom sx={{ color: 'teal' }}>\r\n          Quiz History\r\n        </Typography>\r\n\r\n        {/* Loading indicator for quiz history */}\r\n        {loadingHistory ? (\r\n          <Typography sx={{ color: 'white', textAlign: 'center', mt: 2 }}>\r\n            Loading Quiz History...\r\n          </Typography>\r\n        ) : (\r\n          <List>\r\n            {quizHistory.map((history, index) => (\r\n              <Paper key={index} sx={{ mb: 2, p: 2, backgroundColor: '#2c2c2c', border: '1px solid teal' }}>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary={<Typography variant=\"body1\" sx={{ color: 'white' }}>Subject: {history.subject}</Typography>}\r\n                    secondary={\r\n                      <>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Topic: {history.topic}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>Score: {history.score}/{history.numQuestions}</Typography>\r\n                        <Typography variant=\"body2\" sx={{ color: 'white' }}>{history.feedback}</Typography>\r\n                      </>\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Paper>\r\n            ))}\r\n          </List>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AIQuiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}