{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thabi\\\\Desktop\\\\Develop\\\\vincent-student-dashboard\\\\src\\\\components\\\\FormulaSheets.js\",\n  _s = $RefreshSig$();\n// src/components/FormulaSheets.js\nimport React, { useState } from 'react';\nimport { Box, Typography, List, ListItemButton, ListItemText, Collapse, TextField } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\nimport formulasData from '../data/formulas.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormulaSheets = () => {\n  _s();\n  const [selectedFormula, setSelectedFormula] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\n\n  // Toggle the selected formula when clicking on its name\n  const handleFormulaClick = formulaName => {\n    setSelectedFormula(selectedFormula === formulaName ? null : formulaName);\n  };\n\n  // Filter formulas based on the search term\n  const filteredFormulas = formulasData.formulas.filter(formula => formula.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(MathJaxContext, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        backgroundColor: '#2c2c2c',\n        color: '#fff',\n        minHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Formula Dictionary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search for a formula\",\n        variant: \"outlined\",\n        fullWidth: true,\n        sx: {\n          mb: 3,\n          maxWidth: 600\n        },\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        InputLabelProps: {\n          style: {\n            color: '#ffffff'\n          }\n        } // White text for input label\n        ,\n        InputProps: {\n          style: {\n            backgroundColor: '#1e1e1e',\n            color: '#ffffff',\n            borderRadius: '8px'\n          }\n        } // Styling the input field\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n        children: filteredFormulas.length > 0 ? filteredFormulas.map((formula, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemButton, {\n            onClick: () => handleFormulaClick(formula.name),\n            sx: {\n              color: '#008080',\n              // Teal for formula name\n              backgroundColor: selectedFormula === formula.name ? '#444' : '#333',\n              // Darker when selected\n              borderRadius: 1,\n              '&:hover': {\n                backgroundColor: '#444'\n              } // Hover effect\n            },\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: formula.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: selectedFormula === formula.name,\n            timeout: \"auto\",\n            unmountOnExit: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                p: 2,\n                color: '#fff',\n                backgroundColor: '#1e1e1e',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [\"Formula: \", /*#__PURE__*/_jsxDEV(MathJax, {\n                  children: `\\\\( ${formula.formula} \\\\)`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 32\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Breakdown:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this), Object.entries(formula.breakdown).map(([key, value]) => /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [key, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, this), \" \", value]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  mt: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Example Problem:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 23\n                }, this), \" \", formula.example.problem]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Solution:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, this), formula.example.solution.map((step, i) => /*#__PURE__*/_jsxDEV(Typography, {\n                  children: step\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"No formulas found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n// Styled List Component for a clean, compact layout\n_s(FormulaSheets, \"SJ8t/1h9gbENEoxPJTurqN6/s04=\");\n_c = FormulaSheets;\nconst StyledList = styled(List)({\n  width: '100%',\n  maxWidth: 600,\n  // Keep the size smaller\n  backgroundColor: '#2c2c2c',\n  // Matching background color\n  borderRadius: '8px'\n});\n_c2 = StyledList;\nexport default FormulaSheets;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormulaSheets\");\n$RefreshReg$(_c2, \"StyledList\");","map":{"version":3,"names":["React","useState","Box","Typography","List","ListItemButton","ListItemText","Collapse","TextField","styled","MathJax","MathJaxContext","formulasData","jsxDEV","_jsxDEV","FormulaSheets","_s","selectedFormula","setSelectedFormula","searchTerm","setSearchTerm","handleFormulaClick","formulaName","filteredFormulas","formulas","filter","formula","name","toLowerCase","includes","children","sx","flexGrow","p","backgroundColor","color","minHeight","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","mb","maxWidth","value","onChange","e","target","InputLabelProps","style","InputProps","borderRadius","StyledList","length","map","index","onClick","primary","in","timeout","unmountOnExit","mt","Object","entries","breakdown","key","example","problem","solution","step","i","_c","width","_c2","$RefreshReg$"],"sources":["C:/Users/thabi/Desktop/Develop/vincent-student-dashboard/src/components/FormulaSheets.js"],"sourcesContent":["// src/components/FormulaSheets.js\r\nimport React, { useState } from 'react';\r\nimport { Box, Typography, List, ListItemButton, ListItemText, Collapse, TextField } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport { MathJax, MathJaxContext } from 'better-react-mathjax'; // Import MathJax\r\nimport formulasData from '../data/formulas.json'; // Import the JSON file\r\n\r\nconst FormulaSheets = () => {\r\n  const [selectedFormula, setSelectedFormula] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(''); // State for search term\r\n\r\n  // Toggle the selected formula when clicking on its name\r\n  const handleFormulaClick = (formulaName) => {\r\n    setSelectedFormula(selectedFormula === formulaName ? null : formulaName);\r\n  };\r\n\r\n  // Filter formulas based on the search term\r\n  const filteredFormulas = formulasData.formulas.filter((formula) =>\r\n    formula.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <MathJaxContext>\r\n      <Box\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          backgroundColor: '#2c2c2c',\r\n          color: '#fff',\r\n          minHeight: '100vh',\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Formula Dictionary\r\n        </Typography>\r\n\r\n        {/* Search Bar */}\r\n        <TextField\r\n          label=\"Search for a formula\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          sx={{ mb: 3, maxWidth: 600 }}\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          InputLabelProps={{ style: { color: '#ffffff' } }} // White text for input label\r\n          InputProps={{\r\n            style: {\r\n              backgroundColor: '#1e1e1e',\r\n              color: '#ffffff',\r\n              borderRadius: '8px',\r\n            },\r\n          }} // Styling the input field\r\n        />\r\n\r\n        {/* Display Filtered Formula List */}\r\n        <StyledList>\r\n          {filteredFormulas.length > 0 ? (\r\n            filteredFormulas.map((formula, index) => (\r\n              <Box key={index} sx={{ mb: 2 }}>\r\n                <ListItemButton\r\n                  onClick={() => handleFormulaClick(formula.name)}\r\n                  sx={{\r\n                    color: '#008080', // Teal for formula name\r\n                    backgroundColor: selectedFormula === formula.name ? '#444' : '#333', // Darker when selected\r\n                    borderRadius: 1,\r\n                    '&:hover': { backgroundColor: '#444' }, // Hover effect\r\n                  }}\r\n                >\r\n                  <ListItemText primary={formula.name} />\r\n                </ListItemButton>\r\n                <Collapse in={selectedFormula === formula.name} timeout=\"auto\" unmountOnExit>\r\n                  <Box sx={{ p: 2, color: '#fff', backgroundColor: '#1e1e1e', borderRadius: 1 }}>\r\n                    <Typography variant=\"body1\">\r\n                      Formula: <MathJax>{`\\\\( ${formula.formula} \\\\)`}</MathJax>\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                      <strong>Breakdown:</strong>\r\n                      {Object.entries(formula.breakdown).map(([key, value]) => (\r\n                        <Typography key={key}>\r\n                          <strong>{key}:</strong> {value}\r\n                        </Typography>\r\n                      ))}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" sx={{ mt: 1 }}>\r\n                      <strong>Example Problem:</strong> {formula.example.problem}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\">\r\n                      <strong>Solution:</strong>\r\n                      {formula.example.solution.map((step, i) => (\r\n                        <Typography key={i}>{step}</Typography>\r\n                      ))}\r\n                    </Typography>\r\n                  </Box>\r\n                </Collapse>\r\n              </Box>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"body1\">No formulas found</Typography>\r\n          )}\r\n        </StyledList>\r\n      </Box>\r\n    </MathJaxContext>\r\n  );\r\n};\r\n\r\n// Styled List Component for a clean, compact layout\r\nconst StyledList = styled(List)({\r\n  width: '100%',\r\n  maxWidth: 600, // Keep the size smaller\r\n  backgroundColor: '#2c2c2c', // Matching background color\r\n  borderRadius: '8px',\r\n});\r\n\r\nexport default FormulaSheets;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}